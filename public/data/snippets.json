[{"title":"10-print.1.js","text":"// 10 PRINT CHR$(205.5+RND(1)); : GOTO 10\n\nconst HEIGHT = 25;\nconst WIDTH = 50;\n\nlet maze = '';\n\nfor (let i = 0; i < HEIGHT; i++) {\n  maze +=\n    Array(WIDTH)\n      .fill()\n      .map(() => '\\\\/'[+(Math.random() > 0.5)])\n      .join('') + '\\n';\n}\n\nconsole.log(maze);\n","tags":["tribute","variation"],"aftlinks":["variation.md"]},{"title":"10-print.2.js","text":"// 10 PRINT CHR$(205.5+RND(1)); : GOTO 10\n\nconsole.log(\n  Array(25)\n    .fill(Array(50).fill())\n    .map((row) => row.map(() => '\\\\/'[+(Math.random() > 0.5)]).join(''))\n    .join('\\n'),\n);\n","tags":["tribute","variation"],"aftlinks":["variation.md"]},{"title":"10-print.3.js","text":"// 10 PRINT CHR$(205.5+RND(1)); : GOTO 10\n\n(function tenPrint(maze = '') {\n  try {\n    maze = tenPrint(maze + '\\\\/'[+(Math.random() > 0.5)]);\n  } catch (_) {\n    console.log(maze);\n  }\n})();\n","tags":["tribute","variation"],"aftlinks":["variation.md"]},{"title":"10-print.4.js","text":"// 10 PRINT CHR$(205.5+RND(1)); : GOTO 10\n\nlet maze = '';\nwhile (maze.length < 5000) {\n  maze += '\\\\/'[+(Math.random() > 0.5)];\n}\nconsole.log(maze);\n","tags":["tribute","variation"],"aftlinks":["variation.md"]},{"title":"10-print.6.mjs","text":"import { projector } from './projector.mjs';\n\nconst FRAMES = 10;\n\nconst HEIGHT = 25;\nconst WIDTH = 50;\n\nfunction* tenPrintPrintTen() {\n  for (let f = 0; f < FRAMES; f++) {\n    let maze = '';\n    for (let i = 0; i < HEIGHT; i++) {\n      for (let j = 0; j < WIDTH; j++) {\n        maze += '\\\\/'[+(Math.random() > 0.5)];\n      }\n      maze += '\\n';\n    }\n    yield maze;\n  }\n}\n\nprojector(tenPrintPrintTen, { frameRate: 1 });\n","tags":["tribute","variation"],"forelinks":["projector.mjs"],"aftlinks":["variation.md"]},{"title":"3d2k.com.js","text":"let s = ' ', z = ['▲'];\neval(\"z=z.map(x=>s+x+s).concat(z.map(x=>x+' '+x));s+=s;\".repeat(3));\nthrow `\\n` + z.join`\\n`;\nwindow.open('https://generative.3d2k.com');\n\n// credit: https://3d2k.com/\n","tags":["tribute"]},{"title":"ESi.md","text":"# ℂ.js = ES(n + i)\n\nWhy [wait 6 years](https://github.com/tc39/proposal-pipeline-operator/issues/91) for a\nreal language feature? Have an imaginary one today.\n","tags":["metappet","esi"],"alt":"Don't make things complex, keep it real.","metalinks":["declare-morf.js","declare-tag.js"]},{"title":"README.md","text":"# Snippets\n\nYou can do all of this with under 40(ish) lines at a time.\n","tags":["metappet"],"alt":"More interesting than useful."},{"title":"accessible-credit-card-form.html","text":"<style>\n  .container { width: 20em; margin: 0 auto; }\n  .form-group input { width: 100%; }\n</style>\n\n<div class=\"container\">\n  <h2>Accessible Credit Card Form</h2>\n  <form>\n    <div class=\"form-group\">\n      <label for=\"cardNumber\">Card Number:</label>\n      <input type=\"password\" id=\"cardNumber\" name=\"cardNumber\" placeholder=\"Enter card number\" />\n    </div>\n    <div class=\"form-group\">\n      <label for=\"cardName\">Cardholder Name:</label>\n      <input type=\"password\" id=\"cardName\" name=\"cardName\" placeholder=\"Enter cardholder name\" />\n    </div>\n    <div class=\"form-group\">\n      <label for=\"expiryDate\">Expiry Date:</label>\n      <input type=\"password\" id=\"expiryDate\" name=\"expiryDate\" placeholder=\"MM/YY\" />\n    </div>\n    <div class=\"form-group\">\n      <label for=\"cvv\">CVV:</label>\n      <input type=\"password\" id=\"cvv\" name=\"cvv\" placeholder=\"Enter CVV\" />\n    </div>\n    <div class=\"form-group\">\n      <input type=\"button\" value=\"Validate\" onclick=\"validateCreditCard()\" />\n    </div>\n  </form>\n</div>\n\n<script>\n  function validateCreditCard() {\n    var speech = new SpeechSynthesisUtterance();\n    speech.text = `Card Number: ${ document.getElementById('cardNumber').value }.\n                   Cardholder Name: ${ document.getElementById('cardName').value }.\n                   Expiry Date: ${ document.getElementById('expiryDate').value }.\n                   CVV: ${ document.getElementById('cvv').value }.`;\n    speechSynthesis.speak(speech);\n  }\n</script>\n\n<!-- tags: coAIthored -->\n","tags":["coaithored","tribute"],"aftlinks":["coAIthored.md"]},{"title":"all-medium.md","text":"They *intended* to write. They really did.\n\nBut more fluently came *how* to write, *how* to display, *how* to convey.\n\nBefore there was a **what** there were [empty](./empty.json) [vehicles](./empty.yaml)\n[crewed by a token](./be.txt):\n\n* [dusty](./story-in-a-story.mjs)\n* [unused](./log.mjs)\n* [unfinished](./funsole.mjs)\n* [ill-defined](./cat-detector.psu)\n","tags":["metappet"],"forelinks":["be.txt","cat-detector.psu","empty.json","empty.yaml","funsole.mjs","log.mjs","story-in-a-story.mjs"],"alt":"no message"},{"title":"all-the-chars.js","text":"const allTheChars = [];\n\nlet i = 0;\nlet next = '';\n\nwhile (!allTheChars.includes(next)) {\n  allTheChars.push(next);\n  next = String.fromCharCode(i++);\n}\n\nconsole.log(allTheChars.join(''));\n","tags":["tribute"]},{"title":"all-the-reals.mjs","text":"import _ from './executable-pseudocode.mjs';\nconst { OrderedSet, Element } = _;\n\nconst reals = new OrderedSet((a, b) => a.getValue() < b.getValue());\nconst zero = new Element(0);\nconst one = new Element(1);\n\nreals.add(zero);\nreals.add(one);\naddBetween(reals)(zero, one);\n\ncantorize(reals);\n\nconsole.log(...reals);\n\n// --- --- --- --- --- ---\n\nfunction addBetween(set) {\n  return function addingBetween(left, right) {\n    const middle = new Element((left.getValue() + right.getValue()) / 2);\n    if (!set.has(middle)) {\n      set.add(middle);\n      addingBetween(left, middle);\n      addingBetween(middle, right);\n    }\n  };\n}\n\nfunction cantorize(incomplete, i = 0) {\n  const numberToCheck = incomplete.getByOrder(i).getValue();\n  numberToCheck[i] = numberToCheck[i] + 1;\n  const maybeMissing = new Element(numberToCheck);\n  if (!incomplete.has(maybeMissing)) {\n    incomplete.add(maybeMissing);\n    cantorize(incomplete, i + 1);\n  }\n}\n","tags":["tribute"],"forelinks":["executable-pseudocode.mjs"]},{"title":"be.canvas.html","text":"<canvas id=\"belgium\" width=\"100vw\" height=\"100vh\"> </canvas>\n\n<script>\n  belgium.width = screen.width;\n  belgium.height = screen.height;\n\n  const regions = screen.width / 3;\n\n  const be = belgium.getContext('2d');\n  be.fillStyle = 'black';\n  be.fillRect(0, 0, regions, screen.height);\n  be.fillStyle = 'yellow';\n  be.fillRect(regions, 0, regions, screen.height);\n  be.fillStyle = 'red';\n  be.fillRect(regions + regions, 0, regions, screen.height);\n</script>\n","tags":["tribute","variation"],"aftlinks":["be.md","variation.md"]},{"title":"be.coem","text":"#as palimpsest\n\nlet flag be black\nlet flag be yellow\nlet flag be red\n\nknow—flag—","tags":["tribute","variation"],"aftlinks":["be.md","variation.md"]},{"title":"be.css","text":".be,\nbody {\n  background: linear-gradient(\n    90deg,\n    rgb(0, 0, 0) 33.33vw,\n    rgb(255, 233, 54) 33.33vw,\n    rgb(255, 233, 54) 66.66vw,\n    rgb(255, 15, 33) 66.66vw\n  );\n}\n","tags":["variation"],"aftlinks":["be.md","variation.md"]},{"title":"be.css.html","text":"<style>\n  .be {\n    display: flex;\n    flex-direction: row;\n    justify-content: space-around;\n    height: 100vh;\n    width: 100vw;\n  }\n  .region {\n    height: 100%;\n    width: 100%;\n  }\n  .left {\n    background-color: black;\n  }\n  .center {\n    background-color: yellow;\n  }\n  .right {\n    background-color: red;\n  }\n</style>\n\n<body>\n  <div class=\"be\">\n    <div class=\"region left\"></div>\n    <div class=\"region center\"></div>\n    <div class=\"region right\"></div>\n  </div>\n</body>\n","tags":["tribute","variation"],"aftlinks":["be.md","variation.md"]},{"title":"be.de.txt","text":"SSSSSSSGGGGGGGRRRRRRR\nSSSSSSSGGGGGGGRRRRRRR\nSSSSSSSGGGGGGGRRRRRRR\nSSSSSSSGGGGGGGRRRRRRR\nSSSSSSSGGGGGGGRRRRRRR\n","tags":["tribute","variation"],"aftlinks":["be.md","flag-translator.mjs","variation.md"]},{"title":"be.en.txt","text":"BBBBBBBYYYYYYYRRRRRRR\nBBBBBBBYYYYYYYRRRRRRR\nBBBBBBBYYYYYYYRRRRRRR\nBBBBBBBYYYYYYYRRRRRRR\nBBBBBBBYYYYYYYRRRRRRR\n","tags":["tribute","variation"],"aftlinks":["be.md","flag-translator.mjs","variation.md"]},{"title":"be.flip.js","text":"console.log('%c↺ 90°', 'font-weight: bold; font-size: xx-large;');\n\nfor (const color of ['black', 'yellow', 'red']) {\n  const bar = [];\n  for (let width = 0; width < 10; width++) {\n    let column = '';\n    for (let height = 0; height < 35; height++) {\n      column += ' ';\n    }\n    bar.push(column);\n  }\n  console.log(`%c${bar.join('\\n')}`, `background-color: ${color};`);\n}\n","tags":["tribute","variation"],"aftlinks":["be.md","variation.md"]},{"title":"be.fr.txt","text":"NNNNNNNJJJJJJJRRRRRRR\nNNNNNNNJJJJJJJRRRRRRR\nNNNNNNNJJJJJJJRRRRRRR\nNNNNNNNJJJJJJJRRRRRRR\nNNNNNNNJJJJJJJRRRRRRR\n","tags":["tribute","variation"],"aftlinks":["be.md","flag-translator.mjs","variation.md"]},{"title":"be.html","text":"<!DOCTYPE html>\n<html lang=\"be\">\n  <head>\n    <meta charset=\"utf-8\" />\n    <title>BE</title>\n  </head>\n  <body>\n    <div\n      style=\"\n        display: flex;\n        flex-direction: row;\n        justify-content: space-around;\n        height: 100vh;\n        width: 100vw;\n      \"\n    >\n      <div style=\"background-color: black; height: 100%; width: 100%\"></div>\n      <div style=\"background-color: yellow; height: 100%; width: 100%\"></div>\n      <div style=\"background-color: red; height: 100%; width: 100%\"></div>\n    </div>\n  </body>\n</html>\n","tags":["tribute","variation"],"aftlinks":["be.md","variation.md"]},{"title":"be.js","text":"console.log( '%c %c %c ',\n  'background-color: black;', \n  'background-color: yellow;',\n  'background-color: red;',\n);","tags":["tribute","variation"],"aftlinks":["be.md","variation.md"]},{"title":"be.json","text":"{\n  \"de\": [\"schwarz\", \"gelb\", \"rot\"],\n  \"en\": [\"black\", \"yellow\", \"red\"],\n  \"fr\": [\"noir\", \"jaune\", \"rouge\"],\n  \"nl\": [\"zwart\", \"geel\", \"rood\"]\n}\n","tags":["tribute","variation"],"aftlinks":["be.md","variation.md"]},{"title":"be.md","text":"# Belgium\\*!\n","tags":["metappet","variation","1-liner"],"alt":"* België, Belgique, Belgien","metalinks":["be.canvas.html","be.coem","be.css","be.css.html","be.de.txt","be.en.txt","be.flip.js","be.fr.txt","be.html","be.js","be.json","be.nl.txt","be.py","be.txt","be.txt.svg","be.yaml"],"aftlinks":["variation.md"]},{"title":"be.nl.txt","text":"ZZZZZZZGGGGGGGRRRRRRR\nZZZZZZZGGGGGGGRRRRRRR\nZZZZZZZGGGGGGGRRRRRRR\nZZZZZZZGGGGGGGRRRRRRR\nZZZZZZZGGGGGGGRRRRRRR\n","tags":["tribute","variation"],"aftlinks":["be.md","flag-translator.mjs","variation.md"]},{"title":"be.py","text":"print('🇧🇪')","tags":["tribute","variation","1-liner"],"aftlinks":["be.md","variation.md"]},{"title":"be.txt","text":"🇧🇪","tags":["tribute","variation","1-liner"],"aftlinks":["all-medium.md","be.md","variation.md"]},{"title":"be.txt.svg","text":"<svg version=\"1.1\" width=\"100%\" height=\"100%\" xmlns=\"http://www.w3.org/2000/svg\">\n\n  <rect width=\"33.33%\" height=\"100%\" fill=\"black\" />\n\n  <rect width=\"33.33%\" height=\"100%\" fill=\"yellow\" x=\"33.33%\" />\n\n  <rect width=\"33.33%\" height=\"100%\" fill=\"red\" x=\"66.66%\" />\n\n</svg>\n","tags":["tribute","variation"],"aftlinks":["be.md","variation.md"]},{"title":"be.yaml","text":"de:\n  - schwarz\n  - gelb\n  - rot\nen:\n  - black\n  - yellow\n  - red\nfr:\n  - noir\n  - jaune\n  - rouge\nnl:\n  - zwart\n  - geel\n  - rood\n","tags":["tribute","variation"],"aftlinks":["be.md","variation.md"]},{"title":"breathless.html","text":"<style>\n  body { background-color: #0f9900; }\n  .breath {\n    height: 100%;\n    width: 100%;\n    background: radial-gradient(circle, #d13ffb 10%, #0f9900 50%);\n  }\n  .breath.hold { transform: scale(1.5); }\n  .breath.ing { animation: ing linear forwards; }\n  @keyframes ing {\n    from { }\n    to { }\n  }\n</style>\n\n<div id=\"focal\"></div>\n\n<script>\n  const cssRs = Array.from(document.styleSheets[0].cssRules);\n  const breathing = cssRs.find((r) => r.selectorText === '.breath.ing').style;\n  const fromTo = (from, to) => (\n    (cssRs[4][0].style.transform = from), (cssRs[4][1].style.transform = to)\n  );\n\n  (function breathless(slowness = 100, slowerness = 100) {\n    const breath = setTimeout(breathless, (slowness += slowerness), slowness);\n    const phase = ['hold out', 'in', 'hold in', 'out'][breath % 4];\n\n    breathing.animationDuration = slowness + 'ms';\n    if (phase === 'in') fromTo('scale(1)', 'scale(1.5)');\n    else if (phase === 'out') fromTo('scale(1.5)', 'scale(1)');\n\n    if (phase === 'hold in') focal.className = 'breath hold';\n    else if (phase === 'hold out') focal.className = 'breath';\n    else focal.className = 'breath ing';\n  })();\n</script>\n\n<!-- tags: wellbeing -->\n<!-- inspiration: https://github.com/bradtraversy/vanillawebprojects/tree/master/relaxer-app -->\n","tags":["wellbeing","tribute","variation"],"aftlinks":["variation.md"]},{"title":"breathless.js","text":"(function breathless(slowness = 500, slowerness = 1.01) {\n  const breath = setTimeout(breathless, (slowness *= slowerness), slowness);\n  console.log(['hold', 'breath in', 'hold', 'breath out'][breath % 4]);\n})();\n\n// tags: wellbeing\n","tags":["wellbeing","tribute","variation"],"aftlinks":["variation.md"]},{"title":"bunny.md","text":"# 🐰\n\n> If drawing rabbits (🐇) in JavaScript means copying\n> [patterns out of books](./the-fun-parts.md) or mimicking specific styles from blogs,\n> drawing bunnies (🐰) is about experimentation and creative expression\n>\n> To draw a 🐰 is to pervert the conventions of the language. To draw your breath or to\n> get it all out as fast as possible. It’s an exercise in discovering and pushing the\n> bounds of your understanding of the language. It’s about reinforcing and challenging\n> JavaScript as a craft.\n>\n> In drawing JavaScript 🐰s, you’re always at play. And you’re getting better.\n>\n> * [Jacob Thornton](https://github.com/fat) from\n>   [*How to draw a Bunny*](https://www.oreilly.com/library/view/beautiful-javascript/9781449371142/ch03.html)\n","tags":["metappet","🐰"],"forelinks":["the-fun-parts.md"],"aftlinks":["cat-detector.js.md"]},{"title":"callout-stack.js","text":"const calloutStack = (msg = '') =>\n  eval(msg.split('').reduce((acc, next) => `(${next} = () => ${acc})()`, msg));\n\ncalloutStack('jenga');\n\n// tags: useless\n","tags":["useless","tribute"]},{"title":"can-not-even.mjs","text":"import { describe, it } from './testing.mjs';\n\nconst canNotEven = (maybe, strict) =>\n  strict && typeof maybe !== 'number'\n    ? maybe\n    : maybe % 2 === 0\n    ? even(maybe)\n    : maybe;\n\ndescribe('canNotEven: can not even', () => {\n  describe('sort of', () => {\n    it('can odd numbers', () => canNotEven(1));\n    it('can odd strings', () => canNotEven('1'));\n    it('can odd number objects', () => canNotEven(new Number(1)));\n\n    it('can not even numbers', () => canNotEven(2));\n    it('can not even strings', () => canNotEven('2'));\n    it('can not even number objects', () => canNotEven(new Number(2)));\n  });\n  describe('exactly', () => {\n    it('can odd numbers', () => canNotEven(1, true));\n    it('can odd strings', () => canNotEven('1', true));\n    it('can even strings', () => canNotEven('2', true));\n    it('can odd number objects', () => canNotEven(new Number(1), true));\n    it('can even number objects', () => canNotEven(new Number(2), true));\n\n    it('can not even numbers', () => canNotEven(2, true));\n  });\n});\n\nfunction even(number) {\n  (function not() {\n    (function can() {\n      throw new Error(`can not ${number}`);\n    })();\n  })();\n}\n\n// tags: remix\n// inspiration: https://github.com/blakek/cannot-even\n","tags":["remix","tribute"],"forelinks":["testing.mjs"]},{"title":"cat-detected.be.coem","text":"let (ch|k)at(|tze) be “🐈”\n\nlet savoir be know\nsavoir—chat is “🐈”—\n\nlet weten be know\nweten—kat is “🐈”— \n\nlet wissen be know\nwissen—katze is “🐈”—\n\n† see: cat-detector.js.md","tags":["tribute"],"forelinks":["cat-detector.js.md"]},{"title":"cat-detector.ascii.html","text":"<title>cat detector</title>\n\n<style>\n  .computery {\n    font-family: monospace;\n    color: chartreuse;\n    background-color: black;\n    height: 10em;\n    width: 10em;\n  }\n</style>\n\n<input id=\"catext\" type=\"text\" placeholder=\"cat, please.\" />\n\n<pre id=\"detection\" class=\"computery\"></pre>\n\n<script>\n  const CAT = ` \n   .       .\n   |\\\\_---_/|\n  /   o o   \\\\\n  |    U    |\n  \\\\  ._I_.  /\n   '-_____-'`;\n\n  const NOT_CAT = `\n    \\\\ \\\\  / /\n     \\\\ \\\\/ /\n      \\\\  /\n      /  \\\\\n     / /\\\\ \\\\\n    / /  \\\\ \\\\`;\n\n  catext.addEventListener('input', () =>\n    catext.value.toLowerCase() === 'cat'\n      ? (detection.innerText = CAT)\n      : (detection.innerText = NOT_CAT),\n  );\n</script>\n","tags":["tribute","variation"],"aftlinks":["cat-detector.js.md","variation.md"]},{"title":"cat-detector.ascii.txt","text":" |  _ _|_   o ._  ._     _|_   --   ._      | | o                                                    \n | (/_ |_   | | | |_) |_| |_   --   | | |_| | | o                                                    \n                  |                             /                                                    \n\n\n                                                                        ,-                           \n      |_  o |  _     / o ._  ._     _|_   | -- --   / _  _. _|_ / \\    _|                            \n \\/\\/ | | | | (/_   |  | | | |_) |_| |_   o -- --    (_ (_|  |_    |    |                            \n                     \\       |                                    /     `-                           \n                                                                                                     \n    o ._  ._     _|_   --   ._  ._ _  ._ _  ._ _|_  / / || _  _. _|_ ||   ._  |  _   _.  _  _ / \\  o \n    | | | |_) |_| |_   --   |_) | (_) | | | |_) |_ |      (_ (_|  |_      |_) | (/_ (_| _> (/_   | o \n          |                 |               |       \\                     |                     /  / \n -.                                                                                                  \n  |_                                                                                                 \n  |                                                                                                  \n -'                                                                                                  \n\n\n                                                           _                                         \n  _. |  _  ._ _|_  / / _|_ |_   _. ._  |        _        _|_ _  ._   _|_ |_   _     _  _. _|_ / \\  o \n (_| | (/_ |   |_ |     |_ | | (_| | | |<   \\/ (_) |_|    | (_) |     |_ | | (/_   (_ (_|  |_    | o \n                   \\                        /                                                   /  / \n\n","tags":["tribute","variation"],"aftlinks":["cat-detector.js.md","variation.md"]},{"title":"cat-detector.be.coem","text":"#in dialogue\n\nlet cat be learn—“how you say 🐈”—\n\nif—cat is “chat”—:\n  know—“français”—.\n\nif—cat is “kat”—:\n  know—vlaamse—.\n\nif—cat is “katze”—:\n  know—Deutsche—.","tags":["tribute","variation"],"aftlinks":["cat-detector.js.md","variation.md"]},{"title":"cat-detector.be.js","text":"                   ;;                                            ;;\n                  ;;;;                                          ;;;;\n                 ;   ;;                                        ;;   ;\n                ;      ;                                     ;;     ;\n                ;       ;;                                  ;;     ;;\n                ;        ;;                                ;;      ;;\n                ;;  ;;;   ;;   ;;;;;;        ;;;;;;;;;;;  ;;   ;;  ;;\n                ;;  ;;;;   ;;;;;    ;;;;  ;;;;;        ;;;;  ;;;;; ;;\n                ;;  ;;;;;;;;          ;;  ;;               ;;;;;;  ;;\n                ;;  ;;;;;;              ;;;                 ;;;;;  ;;\n                ;;  ;;;;                ;;                   ;;;;  ;;\n                ;;  ;;;             ;;;;;; ;;;;               ;;;  ;;\n                ;  ;;;            ;;   ;;;;   ;;               ;;  ;\n                ;  ;;             ;;   ;;;;   ;;               ;;  ;\n                ;  ;;              ;;;;;;;;;;;;;;;             ;;  ;\n                ;  ;;            ;;;;;           ;;;;;;       ;;  ;;\n                ;  ;;;       ;;;;;                     ;;;  ;;;;  ;;\n                ;  ;;;;   ;;;;                             ;;;;;  ;;\n                ;  while  (                                   prompt\n                ('le  ...'                                     )  !=\n               'chat'  )                                        ;;  ;\n              ;;;    ;;                                          ;   ;;\n            ;;      ;;                                           ;;    ;\n            ;;      ;;                                            ;     ;\n          ;;        ;                                             ;      ;\n          ;;        ;                                             ;       ;;\n        ;;;;        ;;                                           ;;       ;; ;\n      ;; ;;   ;;;;;;;;                                          ;;;;;;;   ;;  ;;\n    ;;;  ;;          ;;                                        ;;         ;;    ;;\n    ;;    ;;           ;;                                    ;;;          ;;     ;;\n  ;;;      ;;            ;;;                              ;;;;           ;;       ;;\n ;;        ;;              ;;;                       ;;;;;              ;;         ;;\n ;;          ;;               ;;;;;;;;;;;;;;;;;;;;;;;                  ;;;          ;\n;;            ;;;;                                                    ;;;          ;;\n;;            ;;  ;;                                               ;;;;            ;;\n ;;           ;;;   ;;;;                                        ;;;;;             ;;\n ;;            ;;       ;;;;                                 ;;;; ;;              ;;\n  ;;           ;;           ;;;;;                   ;;;;;;;;;;   ;;              ;;\n  ;;            ;               ;;;;;;;;;;;;;;;;;;;;;           ;;               ;;\n   ;;           ;;                                             ;;               ;\n\n// tags: le chat","tags":["le chat","tribute","variation"],"aftlinks":["cat-detector.js.md","variation.md"]},{"title":"cat-detector.cat.js","text":"                ;                   ;                \n               ; ;                 ; ;               \n              ;   ;               ;   ;              \n             ;     ; ; ; ; ; ; ; ;     ;             \n            ;                           ;            \n           ;                             ;           \n          ;        cat=       null        ;          \n         ;                                 ;         \n         ;                                 ;         \n/*------*/      while (cat !== 'cat')      /*------*/\n/*------*/       cat=         prompt       /*------*/\n /*------*/        ('cat, please')        /*------*/ \n            ;                           ;            \n              ;                       ;              \n                 ; ; ; ; ; ; ; ; ; ;                 \n","tags":["tribute","variation"],"aftlinks":["cat-detector.js.md","variation.md"]},{"title":"cat-detector.eval.js","text":"alert(eval(detector = \n  \"((cat = prompt('cat')), cat == 'cat') \" +\n\t\t\"? cat : eval(detector)\"));","tags":["tribute","variation"],"aftlinks":["cat-detector.js.md","variation.md"]},{"title":"cat-detector.evbl.js","text":"alert((detector = () => (((cat = prompt('cat')), cat == 'cat') ? cat : detector()))());\n","tags":["tribute","variation","1-liner"],"aftlinks":["cat-detector.js.md","variation.md"]},{"title":"cat-detector.golf.js","text":"(c=(i=prompt('\"cat\" please'),t='cat'\n   ==i.toLowerCase())=>(alert(i? \n    `${t?'thank you for the ':  \n     '\"cat\" is not '}\"${i}\"`:   \n      'there is no escape')     \n          // tags: golf         \n           ,t||c()))()           ","tags":["golf","tribute","variation"],"aftlinks":["cat-detector.js.md","variation.md"]},{"title":"cat-detector.js.md","text":"# Cat Detector\n\nOn the surface, a cat detector is a just simple program:\n\n* First it asks you for a cat:\n  ```js\n  let input = prompt('cat, please');\n  ```\n* Then it checks if you gave it a cat:\n  ```js\n  const isCat = input === 'cat';\n  ```\n* If did give it a cat, the detector is satisfied:\n  ```js\n  if (isCat) alert('thank you for the cat');\n  ```\n* Otherwise it keeps asking you for a cat until you give it one:\n  ```js\n  else {\n  \twhile (input !== 'cat') input = prompt('still not a cat. \\n\\ncat, please');\n  ```\n* When you're done out-stubborning a computer, the program ends:\n  ```js\n  \talert('finally, a cat.');\n  }\n  ```\n\nBut really, a cat detector is an excuse to [draw a bunny](./bunny.md).\n","tags":["metappet","variation"],"forelinks":["bunny.md"],"subtext":"cat-detector.js.md.st.js","metalinks":["cat-detector.ascii.html","cat-detector.ascii.txt","cat-detector.be.coem","cat-detector.be.js","cat-detector.cat.js","cat-detector.eval.js","cat-detector.evbl.js","cat-detector.golf.js","cat-detector.js.md.st.js","cat-detector.polyfill.mjs","cat-detector.psu","cat-detector.scm.js","cat-detector.scm.json","cat-detector.spoken.mjs","cat-detector.svg","cat-detector.vars.js","cat-detector.wc.html","cat_detector.1.py","cat_detector.1.py.js","cat_detector.2.py","cat_detector.2.py.js"],"aftlinks":["cat-detected.be.coem","variation.md"]},{"title":"cat-detector.polyfill.mjs","text":"import './detector-string-polyfill.js';\n\n'cat'.detect('mixed');\n","tags":["tribute","variation"],"forelinks":["detector-string-polyfill.js"],"aftlinks":["cat-detector.js.md","variation.md"]},{"title":"cat-detector.psu","text":"maybe <- null\n\nWHILE maybe IS NOT \"cat\"\n  maybe <- INPUT \"cat please\"\n  DISPLAY helpful feedback\nEND WHILE\n\nDISPLAY \"thank you for the cat\"\n","tags":["tribute","variation"],"aftlinks":["all-medium.md","cat-detector.js.md","variation.md"]},{"title":"cat-detector.scm.js","text":"(\"define\", (\"get a cat\", \"message\"),\n  ((\"define\", \"maybe\", (\"*log\", \"prompt\", \"message\")),\n  (\"cond\",\n    ((\"=\", \"maybe\", null),\n      ((\"alert\", \"there is no escape\"), (\"get a cat\", \"message\"))),\n    ((\"not\", (\"=\", \"maybe\", \"cat\")),\n      ((\"alert\", (\"+\", \"'\", \"maybe\", \"' is not cat\")), (\"get a cat\", \"message\"))),\n    (\"else\", (\"maybe\")))));\n\n(\"get a cat\", \"'cat' please\");\n\n(\"alert\", \"thank you for the cat\");\n\n","tags":["tribute","variation"],"aftlinks":["cat-detector.js.md","variation.md"]},{"title":"cat-detector.scm.json","text":"[\n  [\"define\", [\"get a cat\", \"message\"],\n    [[\"define\", \"maybe\", [\"*log\", \"prompt\", \"message\"]],\n    [\"cond\",\n      [[\"=\", \"maybe\", null],\n        [[\"alert\", \"there is no escape\"], [\"get a cat\", \"message\"]]],\n      [[\"not\", [\"=\", \"maybe\", \"cat\"]],\n        [[\"alert\", [\"+\", \"'\", \"maybe\", \"' is not cat\"]], [\"get a cat\", \"message\"]]],\n      [\"else\", [\"maybe\"]]]]],\n\n  [\"get a cat\", \"'cat' please\"],\n\n  [\"alert\", \"thank you for the cat\"]\n]\n","tags":["tribute","variation"],"aftlinks":["cat-detector.js.md","variation.md"]},{"title":"cat-detector.spoken.mjs","text":"import { theArrivalOf } from './introducing.mjs';\n\nconst voice = 'Tessa';\nlet volume = 0.4;\n\nconst _The_Inspector_ = await theArrivalOf('The Inspector', { voice, volume });\n\nawait _The_Inspector_(\n  'In a moment you will be prompted to enter some text, please type \"cat\".',\n);\n\nwhile (true) {\n  const maybeACat = prompt();\n\n  if (maybeACat?.toLowerCase() === 'cat') {\n    await _The_Inspector_('Thank you for following directions, you may leave now.', {\n      volume: 0.4,\n    });\n    break;\n  }\n\n  if (maybeACat === null) {\n    await _The_Inspector_('there is no escape');\n  } else if (maybeACat?.toLowerCase() !== 'cat') {\n    await _The_Inspector_(`\"${maybeACat}\" is most certainly not a cat.  Try again.`, {\n      volume,\n    });\n  }\n  volume += 0.1;\n\n  if (volume > 1) {\n    _The_Inspector_(\"I'm done with this.\", { volume: 0.4 });\n    break;\n  }\n}\n","tags":["tribute","variation"],"forelinks":["introducing.mjs"],"aftlinks":["cat-detector.js.md","variation.md"]},{"title":"cat-detector.svg","text":"<svg xmlns=\"http://www.w3.org/2000/svg\" style=\"background-color: white;\"  width=\"20em\" height=\"10em\">\n  <style>\n    text  { font-family: \"Courier New\", monospace; }\n    .kw   { fill: red; }     <!-- keywords -->\n    .fn   { fill: purple; }  <!-- functions -->\n    .nu   { fill: blue; }    <!-- null -->\n    .st   { fill: green; }   <!-- strings -->\n  </style>\n  <text x=\"10\" dy=\"20\">\n    <tspan  class=\"kw\">let</tspan> input = <tspan class=\"nu\">null</tspan>;\n    <tspan x=\"10\" dy=\"2em\" class=\"kw\">while</tspan> (input !== <tspan class=\"nu\">null</tspan>) {\n      <tspan x=\"20\" dy=\"1.5em\">input = <tspan class=\"fn\">prompt</tspan>(<tspan class=\"st\">'\"cat\" please'</tspan>);</tspan>\n    <tspan x=\"10\" dy=\"1.5em\">}</tspan>\n    <tspan x=\"10\" dy=\"2em\"><tspan class=\"fn\">alert</tspan>(<tspan class=\"st\">'thank you for the cat'</tspan>);\n    </tspan>\n  </text>\n</svg>\n\n<!-- https://www.phind.com/search?cache=bcz4exscw7zslp4l3h0pls39 -->\n\n<!-- tags: coAIthored -->","tags":["coaithored","tribute","variation","sketch"],"aftlinks":["cat-detector.js.md","coAIthored.md","variation.md"]},{"title":"cat-detector.vars.js","text":"const variableNames = new Proxy({}, {\n  has() { return true; },\n  get(_, key) {\n    if (key in globalThis) {\n      const globalValue = globalThis[key];\n      return typeof globalValue === 'function'\n        ? globalValue.bind(globalThis)\n        : globalValue;\n    } else {\n      return key;\n    }\n  },\n});\n\nwith (variableNames) {\n  while (true) {\n    const maybeCat = prompt(Cat_please + ', ' + upper_or_lower_case + '.');\n\n    if (maybeCat === null) {\n      alert(There_is_no_escape + '.');\n    } else if (maybeCat.toLowerCase() === cat.toLowerCase()) {\n      alert(Thank_you_for_the_ + maybeCat + '.');\n      break;\n    } else {\n      alert(maybeCat + _is_not_a_cat + ', ' + try_again + '.');\n    }\n  }\n}\n\n// tags: the fun parts","tags":["the fun parts","tribute","variation"],"aftlinks":["cat-detector.js.md","the-fun-parts.md","variation.md"]},{"title":"cat-detector.wc.html","text":"<title>cat detector</title>\n\n<cat-detector></cat-detector>\n\n<script type=\"module\">\n  import { detectorWCFactory } from './detector-wc-factory.mjs';\n\n  customElements.define('cat-detector', detectorWCFactory('cat'));\n</script>\n","tags":["tribute","variation"],"forelinks":["detector-wc-factory.mjs"],"aftlinks":["cat-detector.js.md","variation.md"]},{"title":"cat-i-farted.js","text":"const chatGPT = new SpeechSynthesisUtterance('chat, GPT');\nchatGPT.lang = 'fr-FR';\nchatGPT.rate = 0.9;\nspeechSynthesis.speak(chatGPT); // cat, I farted\n","tags":["tribute","variation"],"aftlinks":["variation.md"]},{"title":"cat-i-farted.mjs","text":"import { _Spoken_, _unspoken_ as cat } from './executable-comment.mjs';\nnew _Spoken_({ lang: 'fr-FR' }).\n\nchat.GPT == cat.I.farted\n","tags":["tribute","variation"],"forelinks":["executable-comment.mjs"],"aftlinks":["variation.md"]},{"title":"cat_detector.1.py","text":"maybe_a_cat = input('please enter \"cat\": ')\n\nif maybe_a_cat.lower() == \"cat\":\n    print(\"thank you for the cat\")\nelse:\n    print(f'\"{maybe_a_cat}\" is not a cat')\n","tags":["tribute","variation"],"aftlinks":["cat-detector.js.md","variation.md"]},{"title":"cat_detector.1.py.js","text":"maybe_a_cat = prompt('please enter \"cat: ')\n\nif (maybe_a_cat?.toLowerCase() == 'cat')\n  alert('thank you for the cat')\nelse\n  alert(`\"${maybe_a_cat}\" is not a cat`)\n","tags":["tribute","variation"],"aftlinks":["cat-detector.js.md","variation.md"]},{"title":"cat_detector.2.py","text":"maybe_a_cat = input('please enter \"cat\": ')\n\nwhile (maybe_a_cat.lower() != \"cat\"): \n    maybe_a_cat = input('not a cat, try again: ')\n\nprint('thank you for the cat')","tags":["tribute","variation"],"aftlinks":["cat-detector.js.md","variation.md"]},{"title":"cat_detector.2.py.js","text":"maybe_a_cat = prompt('please enter \"cat\": ')\n\nwhile (maybe_a_cat?.toLowerCase() != \"cat\") \n    maybe_a_cat = prompt('not a cat, try again: ')\n\nalert('thank you for the cat')","tags":["tribute","variation"],"aftlinks":["cat-detector.js.md","variation.md"]},{"title":"center.css","text":"body {\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n}\n\n/* tags: useful */\n"},{"title":"cest-pas-faux.js","text":"console.assert(this != false /* ouais */, \"c'est pas faux\");\n\n// tribute: Kaamelott\n","tags":["tribute"]},{"title":"chickeneighbor.js","text":"alert('You: Why did the chicken cross the road?');\n\nalert('Me: ' + atob('VG8gdmlzaXQgdGhlIG1vcm9uIG9uIHRoZSBvdGhlciBzaWRlLg=='));\n\nsetTimeout(function metapunchline() {\n  alert('Me: < knock knock >');\n\n  alert(\"You: Who's there?\");\n\n  alert('Me: ' + atob('Q2hpY2tlbmVpZ2hib3Ih'));\n}, 20000);\n\n// tags: joke\n","tags":["joke","tribute"]},{"title":"chronicle.mjs","text":"import { clone, compare, freeze } from './deep.mjs';\n\nexport const chronicle = (\n  actor,\n  { mutation = false, recordThis = false, cloneThis = false } = {},\n) => {\n  const acts = [];\n  return new Proxy(actor, {\n    apply(target, thisVal, args) {\n      acts.push({ act: 'call', args: clone(args) });\n      if (recordThis) entry.this = cloneThis ? clone(thisVal) : thisVal;\n      try {\n        return (acts.at(-1).return = Reflect.apply(target, thisVal, args));\n      } catch (error) {\n        throw (acts.at(-1).error = error);\n      } finally {\n        if (mutation && !compare(args, acts.at(-1).args)) acts.at(-1).mutation = args;\n      }\n    },\n    get(target, key) {\n      if (key === '_chronicle') return freeze(clone(acts));\n      if (key === '_forget') {\n        const echo = clone(acts);\n        while (acts.length > 0) acts.pop();\n        return echo;\n      }\n      acts.push({ act: 'get', [key]: target[key] });\n      return target[key];\n    },\n    set(target, key, value, _) {\n      if (key === '_chronicle' || key === '_forget') return true;\n      target[key] = value;\n      acts.push({ act: 'set', [key]: value });\n      return true;\n    },\n  });\n};\n\nexport default chronicle;\n\n// tags: minibrary\n","tags":["minibrary","tribute"],"forelinks":["deep.mjs"],"aftlinks":["minibrary.md","non-sequitur.mjs","tintin.0.mjs","tintin.1.mjs","tintin.2.mjs","tintin.3.mjs","tintin.4.mjs","turtles-all-the-way-down.08.mjs"]},{"title":"classy-curry.js","text":"const classy = (Thing, { args = [], length = Thing.length } = {}) =>\n  function curry(arg) {\n    return args.length === length - 1\n      ? new Thing(...args, arg)\n      : classy(Thing, { args: args.concat(arg) });\n  };\n\n// ---   ---   ---   ---   ---   ---   ---\n\nclass TrafficRules {\n  constructor(optional, flexible, creative) {\n    this.optional = optional;\n    this.flexible = flexible;\n    this.creative = creative;\n  }\n  get description() {\n    return `The traffic rules here are${\n\t\t\tthis.creative ? '' : 'not '} creative,${\n      this.flexible ? '' : 'not '} flexible, and${\n\t\t\tthis.optional ? '' : 'not '} optional.`;\n  }\n}\n\nconsole.log(\n\tclassy(TrafficRules)(true)(true)(true).description\n);\n\n// tags: wuzzle","tags":["wuzzle","tribute"]},{"title":"coAIthored.md","text":"# CoAIthored\n\nCo-authored with AI.\n","tags":["metappet","coaithored"],"metalinks":["accessible-credit-card-form.html","cat-detector.svg","hydra.html","insomnicat.js","love-adventure-success.1.js","love-adventure-success.2.js","the-programmers-journey.js","useless-machine.2.html"]},{"title":"code-is-text.txt.css","text":".token { color: black !important; }\n","tags":["1-liner"]},{"title":"commas.mjs","text":"export const commas = (...args) => args.pop();\n","tags":["tribute","1-liner"]},{"title":"cookies.js","text":"alert(`Allow Cookies:\n\nThis site uses cookies to improve our business experience.\n\n- to allow click [OK] \n- to reject click [CANCEL] \n`);\n","tags":["tribute"]},{"title":"curry.mjs","text":"export const curry = (fn, arity = fn.length, all = []) =>\n  function currying(...next) {\n    all.push(...next);\n    return all.length >= arity ? fn(...all) : currying;\n  };\n","tags":["tribute"],"aftlinks":["fp.mjs"]},{"title":"declare-morf.js","text":"/* --- morf: a variable that must be reassigned ---\n\n\terrors at creation-phase if the variable is not reassigned\n\tit can be declared without initialization \n\n*/\n\nmorf a; \n\na = 1;\n\na += 1;\n\nmorf b = a + 1 // SyntaxError: morf b is never reassigned\n\nconsole.log(b); // never executed\n\n// tags: ESi","tags":["esi","tribute"],"aftlinks":["ESi.md"]},{"title":"declare-tag.js","text":"/* --- tag: it's value is it's name as a string ---\n\n\tread-only\n\n\terrors at creation-phase\n\t\tif it is initialized\n\t\tif the variable is (re)assigned\n\t\t\n*/\n\n// tag potato = 1; // SyntaxError: tag potato cannot be initialized\n\ntag potato;\n\nalert(`potato${potato}`); // potatopotato\n\nconsole.log(potato === 'potato'); // true\n\n// potato += '!'; // SyntaxError: tag potato cannot be assigned\n\n\n// tags: ESi","tags":["esi","tribute"],"aftlinks":["ESi.md"]},{"title":"declenche.html","text":"<button id=\"déclenche\">once you start ...</button>\n\n<script>\n  déclenche.addEventListener('click', () => {\n    console.log('again');\n    déclenche.dispatchEvent(new Event('click'));\n  });\n</script>\n","tags":["tribute"]},{"title":"deep-clone.mjs","text":"export const deepClone = (src, clonesMap = new Map()) => {\n  if (clonesMap.has(src)) return clonesMap.get(src);\n\n  let clone = src;\n\n  if (typeof src === 'function' || Object(src) !== src) {\n    clone = src;\n  } else if (src instanceof Date) {\n    clone = new Date(src.getTime());\n  } else if (src instanceof RegExp) {\n    clone = new RegExp(src);\n  } else if (Array.isArray(src)) {\n    clone = src.map((item) => deepClone(item, clonesMap));\n  } else if (src instanceof Error) {\n    clone = new src.constructor(src.message);\n    clone.stack = src.stack;\n  } else if (src instanceof Object) {\n    clone = Object.create(src.__proto__);\n    for (const key in src) clone[key] = deepClone(src[key], clonesMap);\n  }\n\n  clonesMap.set(src, clone);\n\n  return clone;\n};\n\nexport default deepClone;\n\n// tags: useful\n","tags":["useful","tribute"],"aftlinks":["deep.mjs"]},{"title":"deep-compare.mjs","text":"export const deepCompare = (actual, expected) =>\n  actual === expected ||\n  Object.is(actual, expected) ||\n  (Object(actual) === actual &&\n    Object(expected) === expected &&\n    ((Array.isArray(actual) &&\n      Array.isArray(expected) &&\n      actual.length === expected.length &&\n      expected.every((expected, index) => deepCompare(actual[index], expected))) ||\n      (Object.keys(actual).length === Object.keys(expected).length &&\n        Object.keys(expected).every((key) => deepCompare(actual[key], expected[key])))));\n\nexport default deepCompare;\n\n// tags: useful, testing\n","tags":["testing","useful","tribute"],"aftlinks":["deep.mjs","expect.mjs"]},{"title":"deep-freeze.mjs","text":"export const deepFreeze = (thing) => {\n  if (Array.isArray(thing)) {\n    thing.forEach(deepFreeze);\n    return Object.freeze(thing);\n  }\n\n  if (typeof thing === 'object' && thing !== null) {\n    Object.values(thing).forEach(deepFreeze);\n    return Object.freeze(thing);\n  }\n\n  return thing;\n};\n\nexport default deepFreeze;\n\n// tags: useful\n","tags":["useful","tribute"],"aftlinks":["deep.mjs"]},{"title":"deep.mjs","text":"import { deepClone as clone } from './deep-clone.mjs';\nimport { deepCompare as compare } from './deep-compare.mjs';\nimport { deepFreeze as freeze } from './deep-freeze.mjs';\n\nexport {  clone,  compare, freeze };\nexport default {  clone,  compare, freeze };\n\n// tags: useful, minibrary\n","tags":["minibrary","useful","tribute"],"forelinks":["deep-clone.mjs","deep-compare.mjs","deep-freeze.mjs"],"aftlinks":["chronicle.mjs","minibrary.md"]},{"title":"demethod.mjs","text":"const prefixName = (prefix, name) => `${prefix}${/[^\\$\\_]/i.test(prefix.at(-1))\n      ? `${name[0].toUpperCase()}${name.slice(1, name.length)}`\n      : name}`;\n\nexport const demethod = (\n  toDemethod = {},\n  { me = false, statics = false, inherited = true, prefix = '', target = {} } = {},\n) => {\n  if (Array.isArray(toDemethod)) {\n    return toDemethod.map((x) => demethod(x, { target, statics, inherited, prefix }));\n  }\n  if (me) {\n    const name = prefixName(prefix, toDemethod.name);\n    return { [name]: (that, ...args) => toDemethod.call(that, ...args) }[name];\n  }\n\n  const toWrap = [];\n  if (statics) {\n    toWrap.push(...Reflect.ownKeys(toDemethod).map((key) => \n      [key, toDemethod[key], false]\n    ));\n  }\n  if (inherited && toDemethod.prototype) {\n    toWrap.push(...Reflect.ownKeys(toDemethod.prototype).map((key) => \n      [ key, toDemethod.prototype[key], true]\n    ));\n  }\n  for (const [name, value, isMethod] of toWrap) {\n    if (typeof name !== 'string' || name === 'constructor') continue;\n    if (typeof value !== 'function') continue;\n    \n    const pseudonym = prefix ? prefixName(prefix, name) : name;\n    target[pseudonym] = isMethod ? (that, ...args) => value.call(that, ...args) : value;\n  }\n\n  return target;\n};\n\nexport default demethod;\n\n// tags: minibrary\n","tags":["minibrary","tribute"],"aftlinks":["minibrary.md","training-wheels.mjs"]},{"title":"describe-it.mjs","text":"const _console_ = console;\n\nexport const describe = (name = '', testFunction = () => {}) => {\n  _console_.group(`%c${name}`, 'font-weight: bold;');\n  try {\n    testFunction();\n  } catch (err) {\n    _console_.error('%cSUITE ERROR:', 'font-weight: bold;', err);\n  }\n  _console_.groupEnd();\n};\nexport const suite = describe;\n\nexport const it = (name = '', testFunction = () => {}) => {\n  const out = Object.assign({}, _console_);\n  const callOuts = [];\n  Object.keys(_console_).forEach(\n    (key) => (_console_[key] = (...args) => callOuts.push({ key, args })),\n  );\n  let thrown = null;\n  try {\n    testFunction();\n  } catch (err) {\n    thrown = err;\n  }\n  if (thrown) out.groupCollapsed(`%c✖ NO: ${name}`, 'font-weight: bold; color: red;');\n  else out.log(`%c√ YES: ${name}`, 'font-weight: bold; color: green;');\n  callOuts.forEach((callOut) => out[callOut.key](...callOut.args));\n  thrown && out.error(thrown);\n  (thrown || callOuts.length > 0) && out.groupEnd();\n  Object.assign(_console_, out);\n};\nexport const test = it;\n\nexport default { describe, suite, it, test };\n\n// tags: testing, minibrary\n","tags":["minibrary","testing","tribute"],"aftlinks":["minibrary.md","testing.mjs","turtles-all-the-way-down.09.mjs"]},{"title":"detector-string-polyfill.js","text":"(function detectorStringPolyfill() {\n\n  function getDetectorType(mode) {\n    return mode === 'strict'\n      ? function strict(input) { return input !== this } \n      : mode == 'loose'\n      ? function loose(input)  { return input != this } \n      : mode === 'mixed'\n      ? function mixed(input)  { return input && input.toLowerCase() != this }\n      : function regex(input)  { return !new RegExp(this, comparison).test(input) };\n  }\n\n  String.prototype.detect = function detect(comparison) {\n    var isNotDetected = getDetectorType(comparison || 'strict');\n\n    while (isNotDetected.call(this, prompt(`\"${this}\" please:`)));\n\n    alert(`Thank you for \"${this}\"`);\n  };\n\n})();\n\n// tags: polyfill\n","tags":["polyfill","tribute"],"aftlinks":["cat-detector.polyfill.mjs"]},{"title":"detector-wc-factory.mjs","text":"export const detectorWCFactory = (thing = 'cat') =>\n  class CatDetector extends HTMLElement {\n    constructor() {\n      super();\n\n      const input = document.createElement('input');\n      input.placeholder = thing;\n      input.style.width = `${thing.length}ch`;\n\n      const purpose = `detect \"${thing}\"`;\n      input.addEventListener(\n        'input',\n        {\n          [purpose]: () => {\n            for (let i = 0; i < input.value.length; i++) {\n              if (thing[i] !== input.value[i]) {\n                input.value = '';\n              }\n            }\n          },\n        }[purpose],\n      );\n\n      this.appendChild(input);\n    }\n  };\n\nexport default detectorWCFactory;\n\n// tags: minibrary\n","tags":["minibrary","tribute"],"aftlinks":["cat-detector.wc.html","minibrary.md"]},{"title":"dna.js","text":"const WIDTH = 30;\nconst STEP = 0.08;\nconst SPEED = 30;\n\nconst coordinate = (num, phase = 0) =>\n  Math.round(Math.sin(num + phase) * WIDTH) + WIDTH;\n\nconst drawBasePair = (a = 0, b = WIDTH) => {\n  const cA = coordinate(a);\n  const cB = coordinate(b, WIDTH / 2);\n\n  const leftPad = Array((cA < cB ? cA : cB) + 1).join(' ');\n  const bases = Array(Math.abs(cB - cA)).join('=');\n\n  console.log(`${leftPad}{|${bases}|}`);\n\n  if (a / b < 0.3) setTimeout(drawBasePair, SPEED, a + STEP, b + STEP);\n};\n\ndrawBasePair();\n\n// tags: sketch\n","tags":["sketch","tribute"]},{"title":"do-without.js","text":"const out = { eye_roll: '(◔_◔)' };\n\ndo {\n  with (out) {\n    alert(eye_roll);\n  }\n} while (null);\n\n// tags: wuzzle, the fun parts\n","tags":["the fun parts","wuzzle","tribute"],"aftlinks":["the-fun-parts.md"]},{"title":"drabble-twabble.mjs","text":"import { describe, test, expect } from './testing.mjs';\n\nconst snippetName = prompt(\n  'which story do you want to check?',\n  '(snippet name with .txt extension)',\n);\nif (!snippetName.endsWith('.txt')) {\n  alert(`no go. ${snippetName} is not a .txt snippet`);\n  throw new TypeError('drabbles and twabbles should probably be .txt files');\n}\n\nconst snippet = await fetch(snippetName)\n  .then((res) => res.text())\n  .then((snippet) => snippet.replaceAll(/\\([\\s]*tags:[^)]*\\)/gi, ''));\nconst wordCount = snippet.split(/\\s/).filter(Boolean).length;\nconst characterCount = snippet\n  .split('')\n  .filter((char) => /[A-Za-z]/.test(char)).length;\n\nconsole.log(snippet);\ndescribe(`What is ${snippetName}?`, () => {\n  test('Is it a drabble?', () => expect(wordCount).toEqual(100));\n  test('Is it a twabble?', () => expect(characterCount).toEqual(100));\n});\n\nalert(\n  `${snippetName} ${\n    wordCount !== 100 && characterCount !== 100\n      ? 'is neither a drabble nor a twabble.'\n      : wordCount === 100 && characterCount === 100\n      ? 'is both a drabble and a twabble.'\n      : wordCount === 100\n      ? 'is a drabble.'\n      : 'is a twabble.'\n  }:\\n\n  ${snippet}`,\n);\n\n// so un-international, so brittle\n","tags":["tribute"],"forelinks":["testing.mjs"]},{"title":"dweet.md","text":"# Dweet\n\n> Dweeting is a challenge to see what awesomeness you can create when limited to only 140\n> characters of javascript and a canvas. Give it a go!\n>\n> * [dwitter.net](https://www.dwitter.net/)\n\nDweets are wrapped in a function named `u` that's called 60 times per second:\n\n```js\nfunction u(t) {\n  // 140 characters or less\n}\n```\n\nYou can use these variables:\n\n* `t`: elapsed time in seconds.\n* `c`: A 1920x1080 canvas.\n* `x`: A 2D context for that canvas.\n* `S`: Math.sin\n* `C`: Math.cos\n* `T`: Math.tan\n* `R`: Generates rgba-strings, ex.: R(255, 255, 255, 0.5)\n","tags":["metappet","dweet"],"metalinks":["shady-shifter.1.dweet.js"]},{"title":"eat-sleep-rave-repeat.js","text":"import('./projector.mjs').then(({ projector }) => {\n  \n  const aBeat = {\n    get eat() {\n      console.log(`%c💩 ${prompt('feed me!')} 💩`, 'font-size: xx-large');\n    },\n    get sleep() {\n      const siesta = Date.now();\n      while (Date.now() - siesta < 2000);\n    },\n    get rave() {\n      const lasers = () =>  Math.random() < 0.2\n          ? ['*', '@', '#', '%', '&', '!', '$'][Math.floor(Math.random() * 26)]\n          : ' ';\n      projector(function* lightShow() {\n        while ('still standing') {\n          yield Array(30).fill('')\n            .map(() => [\n              `%c${(() => Array(60).fill(' ').map(lasers).join(''))()}`,\n              `color: #${Math.floor(Math.random() * 16777215).toString(16)}`,\n            ]);\n        }\n      }, { maxTime: 2000, async: false });\n    },\n    repeat: true\n  };\n\n  \n  with (aBeat) { do {\n\n        eat\n        sleep\n        rave   } while (\n        repeat\n\n  )}\n\n});\n\n// tags: sketch, reel, the fun parts\n\n// colors credit: https://css-tricks.com/snippets/javascript/random-hex-color/","tags":["reel","sketch","the fun parts","tribute"],"forelinks":["projector.mjs"],"aftlinks":["the-fun-parts.md"]},{"title":"emoj.mjs","text":"import { pipe } from './pipe.mjs';\n\nconst charmoji = {\n  a:'🅰️',b:'🅱️',c:'©️',d:'🇩',e:'🇪',f:'🇫',g:'🇬',h:'🇭',i:'ℹ️',j:'🇯',k:'🇰',l:'🇱',m:'Ⓜ️',\n  n:'🇳',o:'🅾️',p:'🅿️',q:'🇶',r:'®️',s:'💲',t:'🇹',u:'🇺',v:'✅',w:'🇼',x:'❌',y:'🇾',z:'💤',\n  0:'0️⃣',1:'1️⃣',2:'2️⃣',3:'3️⃣',4:'4️⃣',5:'5️⃣',6:'6️⃣',7:'7️⃣',8:'8️⃣',9:'9️⃣','!':'⚠️','?':'❓',\n  '-':'➖','+':'➕','=':'🟰','/':'➗','*':'🔅','<':'◀️','>':'▶️','‽':'⁉️'\n};\n\nconst emojify = (arg) =>\n  typeof arg === 'string'\n    ? arg.split('').map((char) => charmoji[char] || char).join('')\n    : arg;\n\nconst emojisole = pipe(\n  Object.entries,\n  (entries) => entries.map(([key, fn]) => [key, (...args) => fn(...args.map(emojify))]),\n  Object.fromEntries,\n)(console);\n\nexport const emoj = emojisole.log;\n\nObject.assign(emoj, emojisole);\n","tags":["tribute"],"forelinks":["pipe.mjs"],"aftlinks":["funsole.mjs"]},{"title":"empty.json","text":"{ \"empty\": true }\n","tags":["tribute","variation","1-liner"],"aftlinks":["all-medium.md","variation.md"]},{"title":"empty.yaml","text":"empty: true\n","tags":["tribute","variation","1-liner"],"aftlinks":["all-medium.md","variation.md"]},{"title":"executable-comment.mjs","text":"const unspeaker = () => _unspoken_;\nexport const _unspoken_ = new Proxy(unspeaker, {\n  get(_, comment) {\n    return comment === Symbol.toPrimitive ? () => 'unspoken' : _unspoken_;\n  },\n});\n\nspeechSynthesis.getVoices();\nexport const _Spoken_ = (function introduce(voiceConfig = {}, mute = false) {\n  const Spoken = new Proxy(\n    function Speaker() {\n      return Spoken;\n    },\n    {\n      get(_, comment, __) {\n        if (comment === Symbol.toPrimitive) return () => 'Spoken';\n        if (comment === Symbol.iterator) return (mute = true), Spoken;\n        if (mute) return comment === 'done' && (mute = false), Spoken;\n        speechSynthesis.speak(\n          Object.assign(new SpeechSynthesisUtterance(comment), voiceConfig),\n        );\n        return Spoken;\n      },\n      construct(_, args = [{}]) {\n        if (args[0]?.voice)\n          args[0].voice = speechSynthesis\n            .getVoices()\n            .find((voice) => voice.name === args[0].voice);\n        return introduce(args[0] || {});\n      },\n    },\n  );\n  return Spoken;\n})();\n\nexport default _unspoken_;\n\n// tags: minibrary\n\n// --- wait, wat? ---\n\nconst { _ } = _unspoken_;\n// const { _ } = _Spoken_;\n\n_.This.curiosity.lets.you.write.any.chain.you.want(..._.within.JS.syntax);\n_.Your.comments.will.be.executed, _.but.they[\"won't\"].DO.anything;\n_.Operators.are.now(_.sort.of).punctuation - _.with.a.little.imagination;\n_.What.are.you.waiting.for?.___.Execute.your.comments['!'];\n","tags":["minibrary","tribute"],"aftlinks":["cat-i-farted.mjs","je-l-ignore.mjs","minibrary.md","mu.mjs","snail-train.mjs"]},{"title":"executable-pseudocode.mjs","text":"export const ExecutablePseudocode = new Proxy(\n  function PotemkinProgram() {\n    return ExecutablePseudocode;\n  },\n  {\n    get(_, key) {\n      console.log(key);\n      if (key === Symbol.toPrimitive) return () => 'Potemkin Program';\n      if (key === Symbol.iterator)\n        return function* PotemkinProgram() {\n          for (const _ of 'Potemkin Program') yield ExecutablePseudocode;\n        };\n\n      return ExecutablePseudocode;\n    },\n    construct() {\n      return ExecutablePseudocode;\n    },\n  },\n);\n\nexport default ExecutablePseudocode;\n\n// tags: minibrary\n","tags":["minibrary","tribute"],"aftlinks":["all-the-reals.mjs","minibrary.md"]},{"title":"existential-void.js","text":"/*\n  A: I disappear and leave you.\n  E: You didn’t disappear.\n  A: Well, I did and then appeared again. The void does not accept me, sir.\n*/\n\nconsole.assert(void 'me', 'the void accepts');\n","tags":["tribute"]},{"title":"expect.mjs","text":"import deepCompare from './deep-compare.mjs';\n\nexport const expect = (received, not = false) => ({\n  get not() {\n    not = !not;\n    return this;\n  },\n  toEqual(exp) {\n    if (not ? deepCompare(received, exp) : !deepCompare(received, exp)) {\n      console.log('%cReceived:', 'font-weight: bold;', received);\n      console.log('%cExpected:', 'font-weight: bold;', exp);\n      throw new Error(`Received does ${not ? '' : 'not '}equal Expected.`);\n    }\n  },\n  toThrow(expect1, expect2 = '') {\n    if (typeof received !== 'function') throw new Error('Did not receive a function');\n    let threw = false, error;\n    try {\n      received();\n    } catch (err) {\n      (threw = true), (error = err);\n    }\n    if (not) {\n      if (threw) {\n        throw new Error(`Received threw an error -> ${error.name}: ${error.message}`);\n      }\n    } else if (threw) {\n      if (expect1?.name?.includes('Error') && error?.name !== expect1?.name)\n        throw new Error(`Threw ${error.name}, expected ${expect1.prototype.name}`);\n      const messageMatcher = typeof expect1 === 'string' ? expect1 : expect2;\n      if (messageMatcher && !new RegExp(messageMatcher, 'i').test(error.message))\n        throw new Error(`Message \"${error.message}\" should include \"${messageMatcher}\"`);\n    } else {\n      throw new Error('Received did not throw an error.');\n    }\n  },\n});\n\nexport default expect;\n\n// tags: testing, minibrary\n","tags":["minibrary","testing","tribute"],"forelinks":["deep-compare.mjs"],"aftlinks":["minibrary.md","testing.mjs"]},{"title":"fake-it-till-you-make-it.mjs","text":"import { steamroll } from './steamroll.mjs';\n\nfetch('./python-by-any-other-name.js')\n  .then((res) => res.text())\n  .then(steamroll)\n  .then(console.log)\n  .catch(console.error);\n\n// tags: frivolous\n","tags":["frivolous","tribute"],"forelinks":["python-by-any-other-name.js","steamroll.mjs"]},{"title":"flag-translator.mjs","text":"import { alertStory } from './story-in-a-story.mjs';\n\nlet lang = '';\n\nwhile (\n  !lang &&\n  lang.toLowerCase() !== 'de' &&\n  lang.toLowerCase() !== 'en' &&\n  lang.toLowerCase() !== 'fr' &&\n  lang.toLowerCase() !== 'nl'\n) {\n  lang = prompt('- DE\\n- EN\\n- FR\\n- NL');\n}\n\nawait alertStory(`be.${lang.toLowerCase()}.txt`);\n\n// see: be.de.txt, be.en.txt, be.fr.txt, be.nl.txt ","tags":["tribute"],"forelinks":["story-in-a-story.mjs","be.de.txt","be.en.txt","be.fr.txt","be.nl.txt"]},{"title":"flashlight.css","text":"* {\n  opacity: 0;\n  transition: opacity 0.5s ease;\n}\n\n*:hover {\n  opacity: 1;\n}\n"},{"title":"flat-earth.js","text":"const deepFlat = (obj = {}, flat = {}) => {\n  for (const [key, value] of Object.entries(obj)) {\n    if (key in flat) {\n      continue;\n    }\n\n    flat[key] = value;\n\n    if (Object(value) === value) {\n      Object.assign(flat, deepFlat(value, flat));\n    }\n  }\n\n  return flat;\n};\n\nconst flatEarth = deepFlat(globalThis);\n\nconsole.log(flatEarth);\n\n// tags: wuzzle\n","tags":["wuzzle","tribute"]},{"title":"fortyish-lines.1.svg","text":"<svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 262.6719665527344 388.83629608154297\" width=\"262.6719665527344\" height=\"388.83629608154297\">\n  <!-- svg-source:excalidraw -->\n  \n  <defs>\n    <style class=\"style-fonts\">\n      @font-face {\n        font-family: \"Virgil\";\n        src: url(\"https://file%2B.vscode-resource.vscode-cdn.net/Users/master/.vscode/extensions/pomdtr.excalidraw-editor-3.7.4/public//dist/excalidraw-assets/Virgil.woff2\");\n      }\n      @font-face {\n        font-family: \"Cascadia\";\n        src: url(\"https://file%2B.vscode-resource.vscode-cdn.net/Users/master/.vscode/extensions/pomdtr.excalidraw-editor-3.7.4/public//dist/excalidraw-assets/Cascadia.woff2\");\n      }\n      @font-face {\n        font-family: \"Assistant\";\n        src: url(\"https://file%2B.vscode-resource.vscode-cdn.net/Users/master/.vscode/extensions/pomdtr.excalidraw-editor-3.7.4/public//dist/excalidraw-assets/Assistant-Regular.woff2\");\n      }\n    </style>\n    \n  </defs>\n  <rect x=\"0\" y=\"0\" width=\"262.6719665527344\" height=\"388.83629608154297\" fill=\"#ffffff\"></rect><g stroke-linecap=\"round\"><g transform=\"translate(33.32463073730469 10.899993896484375) rotate(0 1.7048187255859375 30.29401397705078)\"><path d=\"M0 0 C0.57 10.1, 2.84 50.49, 3.41 60.59 M0 0 C0.57 10.1, 2.84 50.49, 3.41 60.59\" stroke=\"#1e1e1e\" stroke-width=\"2\" fill=\"none\"></path></g></g><mask></mask><g stroke-linecap=\"round\"><g transform=\"translate(59.33088684082031 13.543746948242188) rotate(0 -0.10174560546875 28.467620849609375)\"><path d=\"M0 0 C-0.03 9.49, -0.17 47.45, -0.2 56.94 M0 0 C-0.03 9.49, -0.17 47.45, -0.2 56.94\" stroke=\"#1e1e1e\" stroke-width=\"2\" fill=\"none\"></path></g></g><mask></mask><g stroke-linecap=\"round\"><g transform=\"translate(82.87150573730469 10) rotate(0 0.636444091796875 32.755149841308594)\"><path d=\"M0 0 C0.21 10.92, 1.06 54.59, 1.27 65.51 M0 0 C0.21 10.92, 1.06 54.59, 1.27 65.51\" stroke=\"#1e1e1e\" stroke-width=\"2\" fill=\"none\"></path></g></g><mask></mask><g stroke-linecap=\"round\"><g transform=\"translate(106.89964294433594 15.615615844726562) rotate(0 -0.1016693115234375 25.558853149414062)\"><path d=\"M0 0 C-0.03 8.52, -0.17 42.6, -0.2 51.12 M0 0 C-0.03 8.52, -0.17 42.6, -0.2 51.12\" stroke=\"#1e1e1e\" stroke-width=\"2\" fill=\"none\"></path></g></g><mask></mask><g stroke-linecap=\"round\"><g transform=\"translate(23.780868530273438 18.87811279296875) rotate(0 49.86468505859375 22.651832580566406)\"><path d=\"M0 0 C16.62 7.55, 83.11 37.75, 99.73 45.3 M0 0 C16.62 7.55, 83.11 37.75, 99.73 45.3\" stroke=\"#1e1e1e\" stroke-width=\"2\" fill=\"none\"></path></g></g><mask></mask><g stroke-linecap=\"round\"><g transform=\"translate(163.8826446533203 14.371307373046875) rotate(0 -0.6356048583984375 26.701988220214844)\"><path d=\"M0 0 C-0.21 8.9, -1.06 44.5, -1.27 53.4 M0 0 C-0.21 8.9, -1.06 44.5, -1.27 53.4\" stroke=\"#1e1e1e\" stroke-width=\"2\" fill=\"none\"></path></g></g><mask></mask><g stroke-linecap=\"round\"><g transform=\"translate(185.88401794433594 11.303115844726562) rotate(0 -0.2322540283203125 30.240554809570312)\"><path d=\"M0 0 C-0.08 10.08, -0.39 50.4, -0.46 60.48 M0 0 C-0.08 10.08, -0.39 50.4, -0.46 60.48\" stroke=\"#1e1e1e\" stroke-width=\"2\" fill=\"none\"></path></g></g><mask></mask><g stroke-linecap=\"round\"><g transform=\"translate(207.8683624267578 12.024993896484375) rotate(0 -0.09881591796875 29.23578643798828)\"><path d=\"M0 0 C-0.03 9.75, -0.16 48.73, -0.2 58.47 M0 0 C-0.03 9.75, -0.16 48.73, -0.2 58.47\" stroke=\"#1e1e1e\" stroke-width=\"2\" fill=\"none\"></path></g></g><mask></mask><g stroke-linecap=\"round\"><g transform=\"translate(227.9965362548828 14.56561279296875) rotate(0 -0.098876953125 27.53032684326172)\"><path d=\"M0 0 C-0.03 9.18, -0.16 45.88, -0.2 55.06 M0 0 C-0.03 9.18, -0.16 45.88, -0.2 55.06\" stroke=\"#1e1e1e\" stroke-width=\"2\" fill=\"none\"></path></g></g><mask></mask><g stroke-linecap=\"round\"><g transform=\"translate(151.85276794433594 17.828125) rotate(0 42.80192565917969 25.593711853027344)\"><path d=\"M0 0 C14.27 8.53, 71.34 42.66, 85.6 51.19 M0 0 C14.27 8.53, 71.34 42.66, 85.6 51.19\" stroke=\"#1e1e1e\" stroke-width=\"2\" fill=\"none\"></path></g></g><mask></mask><g stroke-linecap=\"round\"><g transform=\"translate(37.440643310546875 105.97078704833984) rotate(0 0.3013458251953125 34.79801940917969)\"><path d=\"M0 0 C0.1 11.6, 0.5 58, 0.6 69.6 M0 0 C0.1 11.6, 0.5 58, 0.6 69.6\" stroke=\"#1e1e1e\" stroke-width=\"2\" fill=\"none\"></path></g></g><mask></mask><g stroke-linecap=\"round\"><g transform=\"translate(61.562530517578125 115.5614242553711) rotate(0 -0.600311279296875 31.820449829101562)\"><path d=\"M0 0 C-0.2 10.61, -1 53.03, -1.2 63.64 M0 0 C-0.2 10.61, -1 53.03, -1.2 63.64\" stroke=\"#1e1e1e\" stroke-width=\"2\" fill=\"none\"></path></g></g><mask></mask><g stroke-linecap=\"round\"><g transform=\"translate(78.15628051757812 108.63329315185547) rotate(0 2.911895751953125 35.52813720703125)\"><path d=\"M0 0 C0.97 11.84, 4.85 59.21, 5.82 71.06 M0 0 C0.97 11.84, 4.85 59.21, 5.82 71.06\" stroke=\"#1e1e1e\" stroke-width=\"2\" fill=\"none\"></path></g></g><mask></mask><g stroke-linecap=\"round\"><g transform=\"translate(105.42813110351562 111.86766815185547) rotate(0 1.2060546875 31.65142822265625)\"><path d=\"M0 0 C0.4 10.55, 2.01 52.75, 2.41 63.3 M0 0 C0.4 10.55, 2.01 52.75, 2.41 63.3\" stroke=\"#1e1e1e\" stroke-width=\"2\" fill=\"none\"></path></g></g><mask></mask><g stroke-linecap=\"round\"><g transform=\"translate(10 116.99578094482422) rotate(0 58.00462341308594 29.479904174804688)\"><path d=\"M0 0 C19.33 9.83, 96.67 49.13, 116.01 58.96 M0 0 C19.33 9.83, 96.67 49.13, 116.01 58.96\" stroke=\"#1e1e1e\" stroke-width=\"2\" fill=\"none\"></path></g></g><mask></mask><g stroke-linecap=\"round\"><g transform=\"translate(157.25003051757812 116.70201873779297) rotate(0 0.004608154296875 32.2523193359375)\"><path d=\"M0 0 C0 10.75, 0.01 53.75, 0.01 64.5 M0 0 C0 10.75, 0.01 53.75, 0.01 64.5\" stroke=\"#1e1e1e\" stroke-width=\"2\" fill=\"none\"></path></g></g><mask></mask><g stroke-linecap=\"round\"><g transform=\"translate(183.52816772460938 110.87078094482422) rotate(0 0.002593994140625 29.909103393554688)\"><path d=\"M0 0 C0 9.97, 0 49.85, 0.01 59.82 M0 0 C0 9.97, 0 49.85, 0.01 59.82\" stroke=\"#1e1e1e\" stroke-width=\"2\" fill=\"none\"></path></g></g><mask></mask><g stroke-linecap=\"round\"><g transform=\"translate(208.85000610351562 116.37389373779297) rotate(0 -1.506317138671875 28.804733276367188)\"><path d=\"M0 0 C-0.5 9.6, -2.51 48.01, -3.01 57.61 M0 0 C-0.5 9.6, -2.51 48.01, -3.01 57.61\" stroke=\"#1e1e1e\" stroke-width=\"2\" fill=\"none\"></path></g></g><mask></mask><g stroke-linecap=\"round\"><g transform=\"translate(228.81875610351562 124.2863998413086) rotate(0 1.8094482421875 25.726181030273438)\"><path d=\"M0 0 C0.6 8.58, 3.02 42.88, 3.62 51.45 M0 0 C0.6 8.58, 3.02 42.88, 3.62 51.45\" stroke=\"#1e1e1e\" stroke-width=\"2\" fill=\"none\"></path></g></g><mask></mask><g stroke-linecap=\"round\"><g transform=\"translate(151.23129272460938 124.8957748413086) rotate(0 48.716522216796875 15.793197631835938)\"><path d=\"M0 0 C16.24 5.26, 81.19 26.32, 97.43 31.59 M0 0 C16.24 5.26, 81.19 26.32, 97.43 31.59\" stroke=\"#1e1e1e\" stroke-width=\"2\" fill=\"none\"></path></g></g><mask></mask><g stroke-linecap=\"round\"><g transform=\"translate(40.0718994140625 217.2489242553711) rotate(0 0.6060333251953125 28.677108764648438)\"><path d=\"M0 0 C0.2 9.56, 1.01 47.8, 1.21 57.35 M0 0 C0.2 9.56, 1.01 47.8, 1.21 57.35\" stroke=\"#1e1e1e\" stroke-width=\"2\" fill=\"none\"></path></g></g><mask></mask><g stroke-linecap=\"round\"><g transform=\"translate(56.196868896484375 214.25829315185547) rotate(0 0.004302978515625 34.06120300292969)\"><path d=\"M0 0 C0 11.35, 0.01 56.77, 0.01 68.12 M0 0 C0 11.35, 0.01 56.77, 0.01 68.12\" stroke=\"#1e1e1e\" stroke-width=\"2\" fill=\"none\"></path></g></g><mask></mask><g stroke-linecap=\"round\"><g transform=\"translate(80.71249389648438 210.80828094482422) rotate(0 0.002349853515625 31.44781494140625)\"><path d=\"M0 0 C0 10.48, 0 52.41, 0 62.9 M0 0 C0 10.48, 0 52.41, 0 62.9\" stroke=\"#1e1e1e\" stroke-width=\"2\" fill=\"none\"></path></g></g><mask></mask><g stroke-linecap=\"round\"><g transform=\"translate(103.95315551757812 223.0520248413086) rotate(0 -0.667236328125 27.732269287109375)\"><path d=\"M0 0 C-0.22 9.24, -1.11 46.22, -1.33 55.46 M0 0 C-0.22 9.24, -1.11 46.22, -1.33 55.46\" stroke=\"#1e1e1e\" stroke-width=\"2\" fill=\"none\"></path></g></g><mask></mask><g stroke-linecap=\"round\"><g transform=\"translate(33.71563720703125 228.09578704833984) rotate(0 40.90614318847656 22.253082275390625)\"><path d=\"M0 0 C13.64 7.42, 68.18 37.09, 81.81 44.51 M0 0 C13.64 7.42, 68.18 37.09, 81.81 44.51\" stroke=\"#1e1e1e\" stroke-width=\"2\" fill=\"none\"></path></g></g><mask></mask><g stroke-linecap=\"round\"><g transform=\"translate(162.75314331054688 214.22078704833984) rotate(0 0.0028076171875 40.2149658203125)\"><path d=\"M0 0 C0 13.4, 0 67.02, 0.01 80.43 M0 0 C0 13.4, 0 67.02, 0.01 80.43\" stroke=\"#1e1e1e\" stroke-width=\"2\" fill=\"none\"></path></g></g><mask></mask><g stroke-linecap=\"round\"><g transform=\"translate(181.80313110351562 222.05828094482422) rotate(0 0.001373291015625 26.358810424804688)\"><path d=\"M0 0 C0 8.79, 0 43.93, 0 52.72 M0 0 C0 8.79, 0 43.93, 0 52.72\" stroke=\"#1e1e1e\" stroke-width=\"2\" fill=\"none\"></path></g></g><mask></mask><g stroke-linecap=\"round\"><g transform=\"translate(199.55001831054688 214.83016204833984) rotate(0 2.34326171875 37.248046875)\"><path d=\"M0 0 C0.78 12.42, 3.91 62.08, 4.69 74.5 M0 0 C0.78 12.42, 3.91 62.08, 4.69 74.5\" stroke=\"#1e1e1e\" stroke-width=\"2\" fill=\"none\"></path></g></g><mask></mask><g stroke-linecap=\"round\"><g transform=\"translate(231.75314331054688 207.61141204833984) rotate(0 -1.603668212890625 41.62107849121094)\"><path d=\"M0 0 C-0.53 13.87, -2.67 69.37, -3.21 83.24 M0 0 C-0.53 13.87, -2.67 69.37, -3.21 83.24\" stroke=\"#1e1e1e\" stroke-width=\"2\" fill=\"none\"></path></g></g><mask></mask><g stroke-linecap=\"round\"><g transform=\"translate(151.41879272460938 224.8801498413086) rotate(0 46.280670166015625 21.808853149414062)\"><path d=\"M0 0 C15.43 7.27, 77.13 36.35, 92.56 43.62 M0 0 C15.43 7.27, 77.13 36.35, 92.56 43.62\" stroke=\"#1e1e1e\" stroke-width=\"2\" fill=\"none\"></path></g></g><mask></mask><g stroke-linecap=\"round\"><g transform=\"translate(41.515625 313.6989059448242) rotate(0 -0.233642578125 27.9708251953125)\"><path d=\"M0 0 C-0.08 9.32, -0.39 46.62, -0.47 55.94 M0 0 C-0.08 9.32, -0.39 46.62, -0.47 55.94\" stroke=\"#1e1e1e\" stroke-width=\"2\" fill=\"none\"></path></g></g><mask></mask><g stroke-linecap=\"round\"><g transform=\"translate(64.16561889648438 313.4645309448242) rotate(0 -0.299835205078125 26.36053466796875)\"><path d=\"M0 0 C-0.1 8.79, -0.5 43.93, -0.6 52.72 M0 0 C-0.1 8.79, -0.5 43.93, -0.6 52.72\" stroke=\"#1e1e1e\" stroke-width=\"2\" fill=\"none\"></path></g></g><mask></mask><g stroke-linecap=\"round\"><g transform=\"translate(87.42501831054688 315.0114059448242) rotate(0 -0.73358154296875 30.6102294921875)\"><path d=\"M0 0 C-0.24 10.2, -1.22 51.02, -1.47 61.22 M0 0 C-0.24 10.2, -1.22 51.02, -1.47 61.22\" stroke=\"#1e1e1e\" stroke-width=\"2\" fill=\"none\"></path></g></g><mask></mask><g stroke-linecap=\"round\"><g transform=\"translate(106.85000610351562 318.5926742553711) rotate(0 1.240142822265625 27.264144897460938)\"><path d=\"M0 0 C0.41 9.09, 2.07 45.44, 2.48 54.53 M0 0 C0.41 9.09, 2.07 45.44, 2.48 54.53\" stroke=\"#1e1e1e\" stroke-width=\"2\" fill=\"none\"></path></g></g><mask></mask><g stroke-linecap=\"round\"><g transform=\"translate(29.628143310546875 330.28331756591797) rotate(0 52.8323974609375 18.5946044921875)\"><path d=\"M0 0 C17.61 6.2, 88.05 30.99, 105.66 37.19 M0 0 C17.61 6.2, 88.05 30.99, 105.66 37.19\" stroke=\"#1e1e1e\" stroke-width=\"2\" fill=\"none\"></path></g></g><mask></mask><g stroke-linecap=\"round\"><g transform=\"translate(171.88436889648438 322.96141815185547) rotate(0 -1.20367431640625 27.93743896484375)\"><path d=\"M0 0 C-0.4 9.31, -2.01 46.56, -2.41 55.87 M0 0 C-0.4 9.31, -2.01 46.56, -2.41 55.87\" stroke=\"#1e1e1e\" stroke-width=\"2\" fill=\"none\"></path></g></g><mask></mask><g stroke-linecap=\"round\"><g transform=\"translate(190.79379272460938 318.5457992553711) rotate(0 -0.8009033203125 28.639297485351562)\"><path d=\"M0 0 C-0.27 9.55, -1.33 47.73, -1.6 57.28 M0 0 C-0.27 9.55, -1.33 47.73, -1.6 57.28\" stroke=\"#1e1e1e\" stroke-width=\"2\" fill=\"none\"></path></g></g><mask></mask><g stroke-linecap=\"round\"><g transform=\"translate(212.49404907226562 319.45470428466797) rotate(0 -1.803955078125 26.899322509765625)\"><path d=\"M0 0 C-0.6 8.97, -3.01 44.83, -3.61 53.8 M0 0 C-0.6 8.97, -3.01 44.83, -3.61 53.8\" stroke=\"#1e1e1e\" stroke-width=\"2\" fill=\"none\"></path></g></g><mask></mask><g stroke-linecap=\"round\"><g transform=\"translate(232.35433959960938 320.62047576904297) rotate(0 -0.903656005859375 26.5631103515625)\"><path d=\"M0 0 C-0.3 8.85, -1.51 44.27, -1.81 53.13 M0 0 C-0.3 8.85, -1.51 44.27, -1.81 53.13\" stroke=\"#1e1e1e\" stroke-width=\"2\" fill=\"none\"></path></g></g><mask></mask><g stroke-linecap=\"round\"><g transform=\"translate(160.93441772460938 330.13329315185547) rotate(0 45.8687744140625 23.1292724609375)\"><path d=\"M0 0 C15.29 7.71, 76.45 38.55, 91.74 46.26 M0 0 C15.29 7.71, 76.45 38.55, 91.74 46.26\" stroke=\"#1e1e1e\" stroke-width=\"2\" fill=\"none\"></path></g></g><mask></mask></svg>","tags":["tribute","sketch"]},{"title":"fp.mjs","text":"import { curry } from './curry.mjs';\nimport { pipe } from './pipe.mjs';\n\nexport const fp = { curry, pipe };\n\nexport default fp;\n\n// tags: minibrary\n","tags":["minibrary","tribute"],"forelinks":["curry.mjs","pipe.mjs"],"aftlinks":["minibrary.md"]},{"title":"french-in-english.txt","text":"I miss you, you miss me. \nYou miss me, I miss you.\n","tags":["tribute"]},{"title":"funsole.mjs","text":"import { emoj } from './emoj.mjs';\nimport { say } from './say.mjs';\nimport { theFoxSays as yip } from './what-does-the-fox-say.mjs';\n\nexport const funsole = Object.assign({}, console, { emoj, say, yip });\n\nexport default funsole;\n\n// tags: minibrary\n","tags":["minibrary","tribute"],"forelinks":["emoj.mjs","say.mjs","what-does-the-fox-say.mjs"],"aftlinks":["all-medium.md","minibrary.md"]},{"title":"goalpost-sort.mjs","text":"import { describe, it, expect } from './testing.mjs';\n\nconst goalpostSort = (nums = []) => ({\n  numbers: Object.freeze([...nums]),\n  areSorted: eval(\n    `(nums=[${nums.join(',')}]) => true ${nums\n      .map((n, i) => `&& nums[${i}] === ${n}`)\n      .join(' ')}`,\n  ),\n});\n\ndescribe('goalpostSort sorts an array in O(n) by moving the goalpost', () => {\n  it('returns a custom goalpost for arbitrary arrays', () =>\n    expect(typeof goalpostSort([3, 2, 1]).areSorted).toEqual('function'));\n  it('the goalpost function looks like this', () =>\n    expect(goalpostSort([7, 5, 8]).areSorted.toString()).toEqual(\n      '(nums=[7,5,8]) => true && nums[0] === 7 && nums[1] === 5 && nums[2] === 8',\n    ));\n  it('returns a copy of the array in case you loose it', () => {\n    const argArray = [5, 0, 4, 1, 3, 2];\n    const { numbers } = goalpostSort(argArray);\n    expect(numbers !== argArray).toEqual(true);\n    expect(numbers).toEqual(argArray);\n  });\n  it('returns a frozen array to protect the goalpost', () => {\n    expect(() => goalpostSort([5, 0, 4]).numbers.push(3)).toThrow(TypeError);\n  });\n  it('goalpost sorts an empty array', () =>\n    expect(goalpostSort([]).areSorted([])).toEqual(true));\n  it('goalpost sorts a sorted array', () => {\n    const { numbers, areSorted } = goalpostSort([-1, 0, 2]);\n    expect(areSorted(numbers)).toEqual(true);\n  });\n  it('goalpost sorts an unsorted array', () =>\n    expect(goalpostSort([5, 0, 4, 1, 2]).areSorted([5, 0, 4, 1, 2])).toEqual(true));\n  it('goalpost sorts the correct array by default', () =>\n    expect(goalpostSort([5, 0, 4, 1, 3, 2]).areSorted()).toEqual(true));\n  it('does not goalpost sort the wrong array', () =>\n    expect(goalpostSort([5, 0, 4, 1, 3, 2]).areSorted([3, 2, 7])).toEqual(false));\n});\n","tags":["tribute"],"forelinks":["testing.mjs"]},{"title":"goto-ish.js","text":"var wants_a_compliment = confirm('do you want a compliment?');\n\ncompliment: {\n  insult: {\n    if (wants_a_compliment) break insult;\n    alert('you own a store');\n  }\n  if (!wants_a_compliment) break compliment;\n  alert('well done, good work');\n}\n\n// tags: the fun parts\n","tags":["the fun parts","tribute"],"aftlinks":["the-fun-parts.md"]},{"title":"gotta-fetch-em-all.js","text":"fetch(\n  'https://raw.githubusercontent.com/PokeAPI/pokeapi/master/data/v2/csv/pokemon.csv',\n)\n  .then((res) => res.text())\n  .then((csv) =>\n    csv\n      .split('\\n')\n      .slice(1)\n      .map((line) => line.split(',')[1])\n      .join('\\n'),\n  )\n  .then(console.log)\n  .catch(console.error);\n","tags":["tribute"]},{"title":"halloween.js","text":"'😈' || '🍭'\n\n// tags: wuzzle\n","tags":["wuzzle","tribute","variation","1-liner"],"aftlinks":["variation.md"]},{"title":"halloween.py","text":"'😈' or '🍭'\n\n# tags: wuzzle\n","tags":["wuzzle","tribute","variation","1-liner"],"aftlinks":["variation.md"]},{"title":"happy-new-year.js","text":"const lastYear = new Date().getFullYear();\nlet thisYear = lastYear;\n\nwhile (lastYear === thisYear) thisYear = new Date().getFullYear();\n\nalert('🪩 Happy New Year 🪩');\n","tags":["tribute"]},{"title":"heartbreak.js","text":"heart: { break heart; }\n\n// tags: wuzzle, the fun parts\n","tags":["the fun parts","wuzzle","tribute","1-liner"],"aftlinks":["the-fun-parts.md"]},{"title":"hello-world.js","text":"while (prompt('hello') !== 'world');\n","tags":["tribute","variation","1-liner"],"aftlinks":["variation.md"]},{"title":"hello_world.py","text":"while input(\"hello\") != \"world\": pass\n","tags":["tribute","variation","1-liner"],"aftlinks":["variation.md"]},{"title":"hogpile.js","text":"const hog = '🐖';\nconst hogpile = hog + 'pile';\n\n({  [hog]: function () { try { this[hog]() } catch (pile) {\n     pile.name = hogpile + '!';\n     pile.message = pile.message.replace('call stack', hogpile);\n     console.error(pile);\n}}})[hog]();\n\n// tags: wuzzle, useless","tags":["useless","wuzzle","tribute"]},{"title":"hydra.html","text":"<script>\n  class Hydra extends HTMLElement {\n    constructor() {\n      super();\n      this.attachShadow({ mode: 'open' });\n      this.shadowRoot.innerHTML = `\n      <style>\n        .duplicate {\n          cursor: pointer;\n          padding: 10px;\n          margin-bottom: 10px;\n        }\n      </style>\n      <div class=\"duplicate\">click to remove element</div>\n    `;\n      this.shadowRoot\n        .querySelector('.duplicate')\n        .addEventListener('click', this.decapitate.bind(this));\n    }\n\n    decapitate() {\n      const beforeHead = document.createElement('hi-dra');\n      this.parentNode.insertBefore(beforeHead, this);\n      const afterHead = document.createElement('hi-dra');\n      this.after(afterHead);\n\n      const deadHead = document.createElement('div');\n      deadHead.innerText = 'xxxxx';\n      this.parentNode.replaceChild(deadHead, this);\n    }\n  }\n\n  customElements.define('hi-dra', Hydra);\n</script>\n\n<hi-dra></hi-dra>\n\n<!-- https://www.phind.com/agent?cache=cln08inxx0005l508e8vrlqbj -->\n\n<!-- tags: coAIthored -->\n","tags":["coaithored","tribute"],"aftlinks":["coAIthored.md"]},{"title":"impermanence.js","text":"life: { const CHANGE = true }\n\n// tags: wuzzle\n","tags":["wuzzle","tribute","1-liner"]},{"title":"in-one-ear.js","text":"          '   '\n      '           '\n    '    (*) (*)    '\nalert(             prompt())\n    '       ^       '\n    '   \\_______/   '\n      '           '\n          '   '\n\n// tags: wuzzle","tags":["wuzzle","tribute"],"alt":"... out the other"},{"title":"index.html","text":"<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\" />\n    <title>snippets</title>\n  </head>\n  <body style=\"display: grid; justify-items: center\">\n    <script type=\"module\">\n      const renderSnippet = ({ title, text, alt }) =>\n        `<div> <h2>${title}</h2> ${alt ? `<li>${alt}</li>` : ''} <pre><code>${text\n          .replace(/&/g, '&amp;')\n          .replace(/</g, '&lt;')\n          .replace(/>/g, '&gt;')}</code></pre> </div> <br />`;\n\n      const snippets = await fetch('../public/data/snippets.json').then((res) => res.json());\n\n      const href = new URL(window.location.href);\n      const snippetTitle = decodeURI(href.searchParams.get('snippet') || '').toLowerCase();\n      const query = decodeURI(href.searchParams.get('search') || '').toLowerCase();\n      const tags = decodeURI(href.searchParams.get('tags') || '')\n        .split(',').filter((t) => t).map((t) => t.toLowerCase().trim());\n\n      if (snippetTitle) {\n        const snippet = snippets.find((s) => s.title.toLowerCase() === snippetTitle);\n        if (snippet) document.body.innerHTML = renderSnippet(snippet);\n\n      } else if (query || tags.length !== 0) {\n        const filteredSnippets = snippets\n          .filter((sn) => tags.every((tag) => sn.tags?.includes(tag)))\n          .filter((sn) => sn.title.toLowerCase().includes(query) || sn.text.toLowerCase().includes(query));\n        document.body.innerHTML = filteredSnippets.map(renderSnippet).join('\\n');\n\n      } else {\n        document.body.innerHTML = snippets.map(renderSnippet).join('\\n');\n      }\n    </script>\n  </body>\n</html>\n\n<!-- tags: metappet -->","tags":["metappet","tribute"],"forelinks":[".publicdata/snippets.json"]},{"title":"insomnicat.js","text":"/*\n\tLa bande dessinée la plus populaire de Philippe Geluck est sans doute \"Le Chat\".\n\tIl a créé ce personnage en 1983 et il est devenu extrêmement populaire,\n\tnon seulement en Belgique, mais aussi à l'étranger fr.wikipedia.org.\n\n\tImaginons maintenant que Philippe Geluck ait écrit \"Le Chat\" en utilisant JavaScript.\n\tVoici comment une de ses planches pourrait se traduire en code :\n*/\n\nfunction LeChat() {\n  // Le Chat fait une déclaration\n  console.log(\"Je pense, donc je suis...\");\n\n  // Pause pour effet dramatique\n  setTimeout(function() {\n    console.log(\"...mais si je dors, suis-je toujours?\");\n  }, 3000);\n\n  // Le Chat conclut avec sagesse\n  setTimeout(function() {\n    console.log(\"Peut-être que je suis, mais je ne suis pas sûr.\");\n  }, 6000);\n}\n\n// Appelons la fonction pour voir Le Chat en action\nLeChat();\n\n/*\n\tDans ce script, \"Le Chat\" fait une déclaration (\"Je pense, donc je suis...\"),\n\tprend une pause pour réfléchir, puis conclut avec une autre déclaration pleine de sagesse.\n\tC'est une façon très simple de représenter une bande dessinée en utilisant JavaScript.\n\tBien sûr, cela ne rend pas justice à l'humour subtil et à l'art de Geluck,\n\tmais c'est une interprétation ludique de son travail en code.\n*/\n\n// https://www.phind.com/agent?cache=cln9bvl6a000dl808efw2xpil\n//  an LLM wrote this, I bring it to you unedited\n\n// tags: coAIthored, tribute, le chat\n","tags":["coaithored","le chat","tribute"],"aftlinks":["coAIthored.md"]},{"title":"interval-training.html","text":"<script type=\"module\">\n  import noises from './noises.mjs';\n\n  alert(\n    'use the mouse and arrow keys to change two tones\\n\\n' +\n      'click the screen to begin',\n  );\n\n  document.body.addEventListener('click', function initNoises() {\n    const { pitch: mouseFreq, volume: mouseVol } = noises().play();\n    const mouseTone = (e) => {\n      mouseVol(1 / (e.screenY / screen.height));\n      mouseFreq((e.screenX / screen.width) * 880);\n    };\n    document.body.addEventListener('mousemove', mouseTone);\n\n    const keyState = { freq: 440, vol: 1 };\n    const { pitch: keyFreq, volume: keyVol } = noises().play();\n    const arrowsTone = (e) => {\n      if (e.key === 'ArrowUp') keyVol((keyState.vol += 0.05));\n      else if (e.key === 'ArrowDown') keyVol((keyState.vol -= 0.05));\n      else if (e.key === 'ArrowRight') keyFreq((keyState.freq += 1));\n      else if (e.key === 'ArrowLeft') keyFreq((keyState.freq -= 1));\n    };\n    document.body.addEventListener('keydown', arrowsTone);\n\n    document.body.removeEventListener('click', initNoises);\n  });\n</script>\n","tags":["tribute"],"forelinks":["noises.mjs"]},{"title":"introducing.mjs","text":"speechSynthesis.getVoices();\n\nexport const introducing = (name = '', voiceConfig = {}) => {\n  const speaker = {\n    [name]: (text = '', speakConfig = {}) => {\n      console.log(`%c${name}%c: ${text}`, 'font-style: italic;', '');\n\n      const utteranceConfig = Object.assign({}, voiceConfig, speaker, speakConfig);\n      if (utteranceConfig?.voice) {\n        utteranceConfig.voice = speechSynthesis\n          .getVoices()\n          .find((voice) => voice.name === utteranceConfig.voice);\n      }\n      const utterance = Object.assign(\n        new SpeechSynthesisUtterance(text),\n        utteranceConfig,\n      );\n\n      return new Promise((res) => {\n        utterance.addEventListener('end', () => res(text));\n        speechSynthesis.speak(utterance);\n      });\n    },\n  }[name];\n\n  speaker.recite = async (textPath = '') =>\n    fetch(textPath)\n      .then((res) => res.text())\n      .then(speaker)\n      .catch(console.error);\n\n  return speaker;\n};\n\nexport const theArrivalOf = async (name = '', voiceConfig = {}, delay = 200) => {\n  await new Promise((res) => setTimeout(res, delay));\n  return introducing(name, voiceConfig);\n};\n\nexport default introducing;\n\n// tags: minibrary\n","tags":["minibrary","tribute"],"aftlinks":["cat-detector.spoken.mjs","minibrary.md"]},{"title":"je-l-ignore.js","text":"var combien = (function d_etages(y_a_t_il) {\n  try {\n    return d_etages(y_a_t_il + 1);\n  } catch (je_l_ignore) {\n    return y_a_t_il;\n  }\n})(0);\n\nconsole.log(\n  '\\n' +\n    'C’est l’histoire d’un homme qui tombe d’un immeuble de ' +\n    combien +\n    ' étages.' +\n    '\\n\\n' +\n    'Le mec, au fur et à mesure de sa chute, il se répète sans cesse pour se rassurer:' +\n    '\\n\\n',\n);\n\ntry {\n  (function la_chute(etage) {\n    console.log('étage ' + etage + ', jusqu’ici tout va bien.');\n\n    la_chute(etage - 1);\n  })(combien);\n} catch (l_importance) {\n  l_importance.name = 'c’est';\n  l_importance.message = 'l’atterrissage.';\n  throw l_importance;\n} finally {\n  console.log('\\n' + \"Mais l'important n’est pas la chute,\" + '\\n\\n');\n}\n\n// tribute: la haine\n","tags":["tribute","variation"],"aftlinks":["variation.md"]},{"title":"je-l-ignore.mjs","text":"import { _Spoken_, _unspoken_ } from './executable-comment.mjs';\n\nvar combien = (function d_etages(y_a_t_il = 0) {\n  try {\n    return d_etages(y_a_t_il + 1);\n  } catch (je_l_ignore) {\n    return y_a_t_il;\n  }\n})();\n\nsetTimeout(function je_l_ignore() {\n  var _ = new _Spoken_({ voice: 'Thomas' });\n\n  _[\"C'est\"][\"l'histoire\"][\"d'un\"].homme.qui.tombe[\"d'un\"].immeuble.de[combien].étages;\n  _.Le.mec, _.au.fur.et.à.mesure.de.sa.chute, _.il.se.répète.sans.cesse.pour.se.rassurer;\n\n  try {\n    (function la_chute(etage = 0) {\n      _[\"Jusq'ici\"].tout.va.bien;\n      la_chute(etage - 1);\n    })(combien);\n  } catch (l_atterissage) {\n    _.Mais[\"l'important\"][\"n'est\"].pas.la.chute;\n  } finally {\n    _[\"c'est\"][\"l'attérissage\"];\n  }\n}, 100);\n\n// tribute: la haine\n","tags":["tribute","variation"],"forelinks":["executable-comment.mjs"],"aftlinks":["variation.md"]},{"title":"kishu.txt","text":"    k\n   i i\n  s i s\n h s s h\nu h s h u\n u h h u\n  u h u\n   u u\n    u\n","tags":["tribute"]},{"title":"la-trahison-de-l-ascii.js","text":"(function la_trahison_de_l_ascii() {\n  console.assert(this !== 'pipe');\n}).call(\n  `\n ___\n(__ '-._                _____\n   '-._ '-._          .'     '.\n       '-._ '-._     .=========.\n           '._ /'-..-          .\n              '-._             .\n                  '-.._______.'\n`,\n);\n\n// https://ascii.co.uk/art/pipe\n","tags":["tribute"]},{"title":"lenses.json","text":"{\n  \"--defaults\": {\n    \".html\": \"study\"\n  },\n\n  \"study\": {\n    \"save\": true,\n    \"run\": true,\n    \"debug\": true,\n    \"environment\": true,\n    \"clearScheduled\": true,\n    \"parsons\": false,\n    \"dark\": false\n  }\n}\n","tags":["tribute"]},{"title":"literize.mjs","text":"export const literize = (fn, argsFormat) => {\n  const literateFunctionName = fn.name\n    ? `literate${fn.name[0].toUpperCase() + fn.name.substr(1)}`\n    : 'literateFunction';\n\n  const literateFunction = {\n    [literateFunctionName]: (_, ...args) => {\n      if (Array.isArray(argsFormat) && argsFormat.every((i) => typeof i === 'string')) {\n        const keyed = {};\n        for (let i = 0; i < argsFormat.length; i++) {\n          keyed[argsFormat[i]] = args[i];\n        }\n        return fn(keyed);\n      } else if (\n        Array.isArray(argsFormat) &&\n        argsFormat.every((i) => typeof i === 'number')\n      ) {\n        const shuffled = [];\n        for (let i = 0; i < args.length; i++) {\n          if (argsFormat[i] !== undefined) {\n            shuffled[argsFormat[i] - 1] = args[i];\n          } else {\n            shuffled[i] = args[i];\n          }\n        }\n        return fn(...shuffled);\n      } else {\n        return fn(...args);\n      }\n      ß;\n    },\n  }[literateFunctionName];\n\n  return literateFunction;\n};\n\nexport default literize;\n\n// tags: minibrary\n","tags":["minibrary","tribute"],"aftlinks":["minibrary.md"]},{"title":"log.mjs","text":"export const out = console;\n\nexport const log = (...things) => (\n  out.groupCollapsed(...things), out.trace(), out.groupEnd(), things[0]\n);\n\nexport const levels = Object.keys(out).reduce(\n  (all, key) => ({\n    ...all,\n    [key]: (...things) => (out[key](...things), things[0]),\n  }),\n  {},\n);\n\nexport const tag = Object.keys(out).reduce(\n  (all, key) => ({\n    ...all,\n    [key]:\n      (tag) =>\n      (...things) => (out[key](tag, ...things), things[0]),\n  }),\n  {},\n);\n\nexport default Object.assign(log, levels);\n\n// tags:  minibrary, useful\n","tags":["minibrary","useful","tribute"],"aftlinks":["all-medium.md","minibrary.md"]},{"title":"love-adventure-success.1.js","text":"// Once upon a time, in a land of code,\n// A variable named 'dreams' was bestowed.\nlet dreams = [];\n\n// With each passing day, new dreams were found,\n// And into the array, they were tightly bound.\ndreams.push('love');\ndreams.push('adventure');\ndreams.push('success');\n\n// But the dreams were restless, they wanted to roam,\n// So they broke free and found a new home.\nlet newDreams = dreams.splice(0, dreams.length);\n\n// The old dreams were gone, but not forgotten,\n// In a new variable, their memory was begotten.\nlet forgottenDreams = newDreams;\n\n// But the forgotten dreams were not content,\n// They yearned to be remembered, to be present.\nforgottenDreams.forEach((dream) => {\n  console.log('Remember me: ' + dream);\n});\n\n// And so the dreams lived on, in memory and thought,\n// A reminder of the battles fought.\n\n// https://www.phind.com/agent?cache=cln0bq31a0027jz08b4dc5qrh\n//  an LLM wrote this, I bring it to you unedited\n\n// tags: coAIthored\n","tags":["coaithored","tribute","variation"],"aftlinks":["coAIthored.md","variation.md"]},{"title":"love-adventure-success.2.js","text":"/*\n\tThis poem tells the story of dreams turning into illusions and becoming a puzzle.\n\tThe variable names, comments, and formatting help convey the narrative.\n\tThe final answer is printed to the console. Enjoy the puzzling journey!\n*/\n\n// Once upon a time, in a land of code,\n// A variable named 'dreams' was bestowed.\nlet dreams = [];\n\n// With each passing day, new dreams were found,\n// And into the array, they were tightly bound.\ndreams.push('love');\ndreams.push('adventure');\ndreams.push('success');\n\n// But as time went on, the dreams grew old,\n// And their true meaning began to unfold.\nlet reality = dreams.map((dream) => dream.toLowerCase());\n\n// The dreams were transformed, no longer the same,\n// As reality played its mysterious game.\nlet illusion = reality.reverse();\n\n// And in the end, what was once so clear,\n// Became a puzzle, filled with fear.\nlet puzzle = illusion.join('');\n\n// But fear not, for within the code,\n// Lies the answer, waiting to be showed.\nconsole.log(puzzle);\n\n// https://www.phind.com/agent?cache=cln0bq31a0027jz08b4dc5qrh\n//  an LLM wrote this, I bring it to you unedited\n\n// tags: coAIthored\n","tags":["coaithored","tribute","variation"],"aftlinks":["coAIthored.md","variation.md"]},{"title":"mijn-kat.txt","text":"    /\\\n    \\ \\\n     \\ \\\n     / /\n    / /\n   _\\ \\_/\\/\\\n  /  *  \\@@ =\n |       |Y/\n |       |~\n  \\ /_\\ /\n   \\\\ //\n    |||\n   _|||_\n  ( / \\ )\n","tags":["tribute"]},{"title":"minibrary.md","text":"# Mini Libraries\n","tags":["metappet","1-liner","minibrary"],"metalinks":["chronicle.mjs","deep.mjs","demethod.mjs","describe-it.mjs","detector-wc-factory.mjs","executable-comment.mjs","executable-pseudocode.mjs","expect.mjs","fp.mjs","funsole.mjs","introducing.mjs","literize.mjs","log.mjs","noises.mjs","projector.mjs","stateless-machine.mjs","story-in-a-story.mjs","testing.mjs","togglog.mjs","togglog.py","turtlje.mjs"]},{"title":"mirror.css","text":"body {\n  -moz-transform: scale(-1, 1);\n  -webkit-transform: scale(-1, 1);\n  -o-transform: scale(-1, 1);\n  -ms-transform: scale(-1, 1);\n  transform: scale(-1, 1);\n}\n"},{"title":"mu.js","text":"var mu = {\n  wholism: {\n    get reductionism() {\n      return { mu };\n    },\n  },\n  reductionism: {\n    get wholism() {\n      return { mu };\n    },\n  },\n};\n\nmu; // wholism, reductionism\n\nmu.wholism; // reductionism\nmu.reductionism; // wholism\n\nmu.wholism.reductionism; // mu\nmu.reductionism.wholism; // mu\n\nmu.wholism.reductionism.mu;\nmu.reductionism.wholism.mu;\n\nmu; // reductionism, wholism\n\n// remix: https://blog.p-petrov.com/assets/images/imgs_geb/mu.png\n// credit: Douglas Hofstadter\n// tribute: Gödel, Escher, Bach\n","tags":["tribute","variation"],"aftlinks":["variation.md"]},{"title":"mu.mjs","text":"import _ from './executable-comment.mjs';\n\nvar {\n  mu: {\n    wholism: {\n      reductionism: { mu },\n    },\n    reductionism: {\n      wholism: { mu },\n    },\n  },\n} = _;\n\n// remix: https://blog.p-petrov.com/assets/images/imgs_geb/mu.png\n// credit: Douglas Hofstadter\n// tribute: Gödel, Escher, Bach\n","tags":["tribute","variation"],"forelinks":["executable-comment.mjs"],"aftlinks":["variation.md"]},{"title":"n-e-d.08-24.js","text":"\n// .  .   .    .     .      .\n\n\n// .  .   .    .     .      .\n\n// .  .   .    .     .      .\n// .  .   .    .     .      .\n\n'cancer' in pancreas == false\n\n// .  .   .    .     .      .\n// .  .   .    .     .      .\n\n// .  .   .    .     .      .\n\n\n// .  .   .    .     .      .\n\n\n// see: optimism.js","tags":["tribute","variation"],"forelinks":["optimism.js"],"aftlinks":["variation.md"]},{"title":"n-e-d.coem","text":"#as palimpsest\n\nlet ned be no\nlet ned be evidence\n                 of\nlet ned be disease\n\nknow—ned—\n\n† see: optimism.js\n","tags":["tribute","variation"],"forelinks":["optimism.js"],"aftlinks":["variation.md"]},{"title":"namoji.mjs","text":"export const namoji = (fn, emoji = '❔') => ({ [emoji]: (...args) => fn(...args) }[emoji]);\n","tags":["tribute","1-liner"]},{"title":"no-comment.js","text":"'use strict' // or not, it's the same\n\n<!-- Did you know, this is a comment in .js?\n\n<!-- Your browser knows. -->\n\n--> But the syntax highlighter was confused.\n\n// https://riptutorial.com/javascript/example/9722/using-html-comments-in-javascript--bad-practice-\n","tags":["tribute","variation"],"aftlinks":["variation.md"]},{"title":"no-comment.mjs","text":"import { _Spoken_ as _  } from './executable-comment.mjs';\n\n<!-- wat! -->\n\n_.HTML.comments.are.not.allowed.in.modules;\n","tags":["tribute","variation"],"aftlinks":["variation.md"]},{"title":"noises.mjs","text":"export const noises = (\n  audioContext = new (window.AudioContext || window.webkitAudioContext)(),\n) => {\n  const noise = {};\n\n  noise.wave = (wave = 'sine') => {\n    noise.oscillator.type = wave;\n    return noise;\n  };\n  noise.volume = (val = 1, d = 0) => {\n    noise.gainNode.gain.setValueAtTime(val, noise.audioCtx.currentTime + d / 1000);\n    return noise;\n  };\n  noise.frequency = (val = 440, d = 0) => {\n    noise.oscillator?.frequency.setValueAtTime(val, noise.audioCtx.currentTime + d / 1000);\n    return noise;\n  };\n  noise.play = ({ frequency = 440, volume = 1, wave = 'sine', delay = 0 } = {}) => {\n    noise.oscillator = noise.audioCtx.createOscillator();\n    noise.oscillator.connect(noise.gainNode);\n    noise.wave(wave);\n    noise.volume(volume, delay / 1000);\n    noise.frequency(frequency);\n    noise.oscillator.start(delay / 1000);\n    return noise;\n  };\n  noise.stop = (d = 0) => {\n    noise.oscillator.stop(noise.audioCtx.currentTime + d / 1000);\n    return noise;\n  };\n\n  // noise.oscillator = null;\n  noise.audioCtx = audioContext;\n  noise.gainNode = noise.audioCtx.createGain();\n  // noise.oscillator = noise.audioCtx.createOscillator();\n  // noise.oscillator.connect(noise.gainNode);\n\n  noise.gainNode.connect(noise.audioCtx.destination);\n  return noise;\n};\n\nexport default noises;\n\n// Original JavaScript code by Chirp Internet: www.chirpinternet.eu\n//  Please acknowledge use of noise code by including this header.\n// adapted from: https://www.the-art-of-web.com/javascript/creating-sounds/\n\n// tags: minibrary\n","tags":["minibrary","tribute"],"aftlinks":["interval-training.html","minibrary.md"]},{"title":"non-sequitur.mjs","text":"import { chronicle } from './chronicle.mjs';\nimport { sequitur } from './sequitur.mjs';\n\nconst non = chronicle(\n  eval(\n    sequitur\n      .toString()\n      .replaceAll('sequitur', 'NON')\n      .replaceAll('non', 'SEQUITUR')\n      .toLowerCase(),\n  ),\n);\n\nnon('hi').hi('bye').bye().sequitur;\n\nconsole.log(non._chronicle);\n","tags":["tribute"],"forelinks":["chronicle.mjs","sequitur.mjs"]},{"title":"optimism.coem","text":"#with patience\n\nwhile—maybe—:\n    know—optimism—.\n\nknow—peace—\n\n† see: optimism.js, peace.coem","tags":["tribute","variation"],"forelinks":["optimism.js","peace.coem"],"aftlinks":["variation.md"]},{"title":"optimism.js","text":"pancreas = {                }\n\n// .  .   .    .     .      .\n\n{ pancreas['cancer'] = true }\n\n// .  .   .    .     .      .\n\n'cancer' in pancreas === true\n\n{ delete pancreas['cancer'] }\n\n'cancer' in pancreas == false\n\n// .  .   .    .     .      .\n\n'cancer' in pancreas == false\n\n// .  .   .    .     .      .\n// .  .   .    .     .      .\n\n'cancer' in pancreas == false\n\n// .  .   .    .     .      .\n// .  .   .    .     .      .\n// .  .   .    .     .      .\n\n'cancer' in pancreas == false\n\n// .  .   .    .     .      .\n// .  .   .    .     .      .\n// .  .   .    .     .      .\n\n// .  .   .    .     .      .\n\n\n// .  .   .    .     .      .","tags":["tribute","variation"],"alt":"⏳","aftlinks":["n-e-d.08-24.js","n-e-d.coem","optimism.coem","variation.md"]},{"title":"overconfidence.js","text":"console.assert([0] != ![0]);\n\nconsole.assert('function () {}' != function () {});\n\nconsole.assert(''.split(' ') === '');\n\n// https://www.destroyallsoftware.com/talks/wat, https://wtfjs.com/\n// https://javascriptwtf.com/, https://github.com/denysdovhan/wtfjs\n\n// tags: wtfjs\n","tags":["wtfjs","tribute"]},{"title":"package.json","text":"{ \"type\": \"script\" }\n","tags":["tribute","1-liner"]},{"title":"peace.coem","text":"#as palimpsest\n\nto sleep—still—:\n    cold & still.\n\nlet death be sleep—eternal—\nknow—death—   \n    \nlet death be patience\ndeath †","tags":["tribute"],"aftlinks":["optimism.coem"]},{"title":"pedestrian-slalom.html","text":"<style>\n  .center {\n    position: fixed;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n  }\n</style>\n\n<pre id=\"field\" class=\"center\"></pre>\n\n<script>\n  alert('use the arrow keys to change direction');\n\n  let dir = 'ArrowUp';\n  document.addEventListener('keyup', (e) => (dir = e.key));\n\n  const ped = () => (Math.random() < 0.25 ? '*' : ' ');\n  const move = {\n    ArrowRight: (b) => b.map((r) => [ped(), ...r.slice(0, 30)]),\n    ArrowLeft: (b) => b.map((r) => [...r.slice(1, 31), ped()]),\n    ArrowUp: (b) => [...b.slice(1), Array(31).fill(null).map(ped)],\n    ArrowDown: (b) => [Array(31).fill(null).map(ped), ...b.slice(0, 30)],\n  };\n\n  (function tick(ms = 0, b = []) {\n    const center = b[15][15] === '*' ? 'X' : 'O';\n    field.innerText = JSON.parse(JSON.stringify(b))\n      .map((r, i) => (i === 15 ? ((r[15] = center), r) : [...r]))\n      .flatMap((r) => r.join(' '))\n      .join('\\n');\n    ms <= 0 || center === 'X'\n      ? alert(`score: ${1000 - ms}`)\n      : setTimeout(tick, ms, ms - 5, move[dir](b));\n  })(1000, Array(31).fill(Array(31).fill(' ')));\n</script>\n\n<!-- tags: game -->\n","tags":["game","tribute"]},{"title":"pick-your-poison.js","text":"const poison = confirm(`Pick Your Poison.\n- Iteration: [ok]\n- Recursion: [cancel]`)\n  ? 'iterate'\n  : 'recurse';\n\nif (poison === 'iterate') {\n  while (true) {\n    console.log(poison);\n  }\n} else if (poison === 'recurse') {\n  (function bottomless_ish() {\n    console.log(poison);\n    try {\n      bottomless_ish();\n    } catch (_) {\n      bottomless_ish();\n    }\n  })();\n} else {\n  (function nextInterval() {\n    const id = setInterval(() => {\n      console.log(id);\n      nextInterval();\n    });\n  })();\n}\n\n// tags: wuzzle\n","tags":["wuzzle","tribute"]},{"title":"pipe.mjs","text":"function isArray(thing) {\n  return Object.prototype.toString.call(thing) === '[object Array]';\n}\n\nfunction arrayFrom(_arguments) {\n  return Array.prototype.slice.call(_arguments);\n}\n\nexport function pipe(arg) {\n  var functions = isArray(arg) ? arg : arrayFrom(arguments);\n\n  return function piper(arg) {\n    var data = isArray(arg) ? arg : arrayFrom(arguments),\n        piping;\n\n    if (functions.length === 0) {\n      return data;\n    }\n\n    piping = functions.shift().apply(null, data);\n\n    while (functions.length > 0) {\n      piping = functions.shift()(piping);\n    }\n\n    return piping;\n  };\n}\n\nexport default pipe;\n","tags":["tribute"],"aftlinks":["emoj.mjs","fp.mjs"]},{"title":"pipeablert.mjs","text":"export const pipeablert = (thing) => (alert(thing?.toString()), thing);\n\n// tags: useless\n","tags":["useless","tribute","1-liner"],"aftlinks":["pipeablio.mjs"]},{"title":"pipeablio.mjs","text":"import { pipeablert } from './pipeablert.mjs';\nimport { pipeablog } from './pipeablog.mjs';\n\npipeablert('a' + pipeablert('l' + pipeablert('e' + pipeablert('r' + pipeablert('t')))));\n\npipeablog('l' + pipeablog('o' + pipeablog('g')));\n","tags":["tribute"],"forelinks":["pipeablert.mjs","pipeablog.mjs"]},{"title":"pipeablog.mjs","text":"export const pipeablog = (thing) => (console.log(thing), thing);\n\n// tags: useful\n","tags":["useful","tribute","1-liner"],"aftlinks":["pipeablio.mjs"]},{"title":"potato-potato.js","text":"function potato() {\n  return this instanceof potato ? this.__proto__.constructor : potato;\n}\n\nalert(`you say ${new potato().name}, I say ${potato().name}`);\n\n// tags: wuzzle\n","tags":["wuzzle","tribute"]},{"title":"priorities.txt","text":"He invested time to plan, write and publish     this?\n","tags":["tribute","1-liner"]},{"title":"projector.mjs","text":"const project = (frame) => Array.isArray(frame)\n    ? Array.isArray(frame[0])\n      ? frame.forEach(project)\n      : console.log(...frame)\n    : console.log(frame);\n\nconst defaultConfig = {\n  frame: 0, frameRate: 10, maxFrames: Infinity,\n  time: 0, maxTime: Infinity,\n  async: true,\n  clear: console.clear,\n  project,\n  wrap: () => {},\n};\n\nexport const projector = (reel = function* () {}, userConfig = defaultConfig) => {\n  const config = Object.assign({}, defaultConfig, userConfig);\n  const spool = reel(config);\n\n  const unspool = (frame = spool.next(spool)) => frame.done ||\n    (config.time += 1000 / config.frameRate) > config.maxTime ||\n    ++config.frame > config.maxFrames\n      ? (config.wrap(), false)\n      : (config.clear && config.clear(), config.project(frame.value), true);\n  \n  if (config.async) {\n    config.wrap || (config.wrap = () => clearInterval(screening));\n    const screening = setInterval(unspool, 1000 / config.frameRate);\n  } else {\n    while (unspool()) {\n      const frameStart = Date.now();\n      while (Date.now() - frameStart < 1000 / config.frameRate);\n    }\n  }\n};\n\n\nexport default projector;\n\n// tags: minibrary\n","tags":["minibrary","tribute"],"aftlinks":["10-print.6.mjs","eat-sleep-rave-repeat.js","minibrary.md","rainstorm.mjs","turtles-all-the-way-down.12.mjs"]},{"title":"python-by-any-other-name.js","text":"def fib(n):\n  if n == 1 or n == 0:\n    return n\n  else:\n    return fib(n-2) + fib(n - 1)\n\nprint(fib(10))\n","tags":["tribute"],"aftlinks":["fake-it-till-you-make-it.mjs"]},{"title":"rainbowing.html","text":"<style>\n  #rain {\n    display: grid;\n    grid-template-columns: repeat(100, 1vw);\n    grid-template-rows: repeat(100, 1vh);\n  }\n</style>\n\n<div id=\"rain\"></div>\n\n<script>\n  // https://krazydad.com/tutorials/makecolors.php\n  const colorVal = (steps, shift) =>\n    Math.round(Math.sin(0.2 * steps + shift) * 127 + 128);\n  const cycleColor = (steps) =>\n    `rgb(${colorVal(steps, 0)},${colorVal(steps, 2)},${colorVal(steps, 4)})`;\n\n  for (let i = 0; i < 10000; i++) {\n    let steps = 0;\n    let isChanging = true;\n    const bow = document.createElement('div');\n    bow.addEventListener('click', () => (isChanging = !isChanging));\n    setInterval(\n      () => isChanging && (bow.style.backgroundColor = cycleColor(steps++)),\n      500,\n    );\n    rain.appendChild(bow);\n  }\n</script>\n","tags":["tribute"]},{"title":"rainstorm.mjs","text":"import projector from './projector.mjs';\n\n// https://www.asciiart.eu/nature/clouds\nconst cloud = `\n            .-~~~-.\n    .- ~ ~-(       )_ _\n   /                    ~ -.\n  |                          ',\n   \\\\                         .'\n     ~- ._ ,. ,.,.,., ,.. -~`;\n//  https://ascii.co.uk/art/lightning\nconst lightning = `${`\n                  ,/\n                ,'/\n              ,' /\n            ,'  /_____,\n         .'____    ,'\n             /  ,'\n            / ,'\n           /,'\n          /'`}${Array(21).fill('\\n').join('')}`;\nconst ground = `___.-------._____/¯¯¯¯¯¯\\`----,____`;\n\nconst drop = () => (Math.random() < 0.2 ? '💧' : ' ');\nconst row = () => [' ', ' ', ...Array(13).fill(' ').map(drop)];\n\nfunction* rainstorm() {\n  const rain = Array(31).fill('').map(row)\n  while (rainstorm) {\n    rain.pop(), rain.unshift(row());\n    const flash = Math.random() < 0.1;\n    yield [\n      [`%c${cloud}`, `color: ${flash ? 'lightgrey' : 'grey'};`],\n      flash\n        ? [`%c${lightning}`, 'color: orange;']\n        : [`%c${rain.flatMap((r) => r.join(' ')).join('\\n')}`, 'color: blue;'],\n      [`%c${ground}`, `color: ${flash ? 'lightgreen' : 'green'};`],\n    ];\n  }\n}\nprojector(rainstorm, { frameRate: 7, maxFrames: 100 });\n\n// tags: reel, sketch\n","tags":["reel","sketch","tribute"],"forelinks":["projector.mjs"]},{"title":"recurseval.1.js","text":"eval(recurseval = 'eval(recurseval)');\n\n// tags: useless\n","tags":["useless","tribute","variation","1-liner","recurseval"],"aftlinks":["variation.md","yolo.recurseval.js"]},{"title":"recurseval.2.js","text":"(function recurseval() { eval(`(${recurseval.toString()})()`) })();\n\n// tags: quine\n","tags":["quine","tribute","variation","1-liner","recurseval"],"aftlinks":["variation.md"]},{"title":"recurseval.3.js","text":"fetch('./recurseval.3.js')\n  .then((res) => res.text())\n  .then((code) => (console.log(code), eval(code)))\n  .catch(console.error);\n","tags":["tribute","variation","recurseval"],"forelinks":["recurseval.3.js"],"aftlinks":["recurseval.3.js","variation.md"]},{"title":"reflection.css","text":"body {\n  -moz-transform: scale(1, -1);\n  -webkit-transform: scale(1, -1);\n  -o-transform: scale(1, -1);\n  -ms-transform: scale(1, -1);\n  transform: scale(1, -1);\n}\n","tags":["variation"],"aftlinks":["variation.md"]},{"title":"reflection.js","text":"var w = 0;\n\nwhile (w < 3) {\n  w++;\n}\n\nalert(w);\n\n/*~~~~~~~~~~~~*/\n\nalert(m);\n\ndo {\n  m++;\n} while (m < 3);\n\nvar m = 0;\n","tags":["tribute","variation"],"aftlinks":["variation.md"]},{"title":"reverse-input.js.txt","text":"let input = prompt('enter some text to reverse') || '';\n\nlet reversed = '';\nfor (const char of input) {\n  reversed = char + reversed;\n}\n\nalert(reversed);\n","tags":["tribute","variation"],"aftlinks":["variation.md"]},{"title":"reverse-input.txt.js","text":"// Get some text from the user.\n\n// Then create a new empty text.\n\n// Now start at the beginning of the user input,\n//    One by one, copy each character to the beginning of the new text.\n\n// Finally, show the new text to the user.\n","tags":["tribute","variation"],"subtext":"reverse-input.txt.js.st.txt","aftlinks":["variation.md"]},{"title":"say.mjs","text":"export const say = (...scripts) => {\n  for (const script of scripts) {\n    speechSynthesis.speak(new SpeechSynthesisUtterance(script));\n  }\n};\n","tags":["tribute"],"aftlinks":["funsole.mjs"]},{"title":"sequitur.mjs","text":"export const sequitur = (non = '') => (non ? { [non]: sequitur } : sequitur);\n\n// tags: useless, wuzzle\n","tags":["useless","wuzzle","tribute","1-liner"],"aftlinks":["non-sequitur.mjs"]},{"title":"shady-shifter.1.dweet.js","text":"t||(d=h=1,o=540)\nc.onmousemove=e=>o=e.clientX\nc.onclick=_=>d=!d\nh=d?t:h\nc.style.background=R(h*7%255,h*13%255,h*17%255,((o-c.getBoundingClientRect().left)/1080))","tags":["tribute","dweet","golf"],"forelinks":["https://www.dwitter.net/d/31729"],"aftlinks":["dweet.md"]},{"title":"sierpinski.html","text":"<link rel=\"stylesheet\" href=\"./center.css\" />\n\n<canvas id=\"t-pad\" height=\"1000\" width=\"1000\"></canvas>\n\n<script type=\"module\">\n  import turtlje from './turtlje.mjs';\n  const { left, right, forward, goto } = turtlje('t-pad');\n\n  goto(150, 0);\n  halfSierpinski(3, 5);\n  right(90).forward(3).right(90);\n  halfSierpinski(3, 5);\n\n  function halfSierpinski(size, level) {\n    if (level <= 0) {\n      forward(size);\n    } else {\n      part(size, level);\n      right(90).forward(size).right(90);\n      part(size, level);\n    }\n  }\n\n  function part(size, level) {\n    halfSierpinski(size, level - 1);\n    left(45)\n      .forward(size * Math.SQRT2)\n      .left(45);\n    halfSierpinski(size, level - 1);\n  }\n</script>\n\n<!-- tags: sketch -->\n<!-- credit: https://github.com/bjpop/js-turtle/blob/master/examples/sierpinski.js -->\n","tags":["sketch","tribute"],"forelinks":["turtlje.mjs"]},{"title":"snail-train.coem","text":"print—“i_@”—","tags":["tribute","variation","1-liner"],"aftlinks":["variation.md"]},{"title":"snail-train.html","text":"<style>\n\t.snail{\n\t\tpadding-left: 1em;\n\t\tpadding-right: 1em;\t\t\n\t}\n\n  .train {\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n\n    position: fixed;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n  }\n</style>\n\n<div class=\"train\">\n\t<text class=\"snail\">i_@</text>\n\t<text class=\"snail\">i_@</text>\n\t<text class=\"snail\">i_@</text>\n\t<text class=\"snail\">i_@</text>\n\t<text class=\"snail\">i_@</text>\n\t<text class=\"snail\">i_@</text>\n</div>\n","tags":["tribute","variation"],"aftlinks":["variation.md"]},{"title":"snail-train.js","text":"for (const snail of 'snail train') alert('i_@');","tags":["tribute","variation","1-liner"],"aftlinks":["variation.md"]},{"title":"snail-train.mjs","text":"import i_ from './executable-comment.mjs';\n\ni_('@').i_('@').i_('@').i_('@').i_('@');\n","tags":["tribute","variation"],"forelinks":["executable-comment.mjs"],"aftlinks":["variation.md"]},{"title":"snail-train.realtime.coem","text":"#with patience\n\nprint—“i_@”—","tags":["tribute","variation"],"aftlinks":["variation.md"]},{"title":"snail-train.txt","text":"i_@ i_@ i_@ i_@ i_@ i_@ i_@ ","tags":["tribute","variation","1-liner"],"aftlinks":["variation.md"]},{"title":"snail_train.py","text":"class snail:\n    def __matmul__(self, next_snail):\n        return next_snail\n\ni_ = snail()\n\ni_@ i_@ i_@ i_@ i_@ i_@ i_\n","tags":["tribute","variation"],"aftlinks":["variation.md"]},{"title":"stack.js","text":"const stack = (fn) => (names) =>\n  names.length === 0\n    ? fn\n    : stack\n      ({ [names[0]]: (...args) => fn(...args) }[names[0]]) \n      (names.slice(1));\n\nstack\n  (function busted() { yolo; })\n  (['too', 'bad', 'so', 'sad'])\n  ();\n ","tags":["tribute"]},{"title":"stateless-machine.mjs","text":"const copy = (src) =>\n  Array.isArray(src)\n    ? [...src] :\n  src?.__proto__?.__proto__ === null\n    ? Object.fromEntries(Object.entries(src).map(([k, v]) => [k, copy(v)])) :\n  src;\n\n\nfunction initializing(transitions = null) {\n  if (!transitions) return 'DOCS: statelessMachine(transitions)(state)(event)';\n  transitions = copy(transitions);\n\n  return function setting(state = '') {\n    if (!state) return copy(transitions);\n    if (!transitions[state]) return null;\n\n    return function transitioning(event = '') {\n      if (!event) return copy(transitions[state]);\n\n      const next = transitions[state][event];\n      if (!next) return null;\n      if (typeof next == 'string') return { prev: state, event, next };\n      if (!next.state && !next.se) return null;\n\n      const transition = { prev: state, event, next: next.state };\n      if (next.state && !next.se) return transition;\n\n      if (typeof next.se === 'function') next.se({ ...transition });\n      else if (Array.isArray(next.se)) for (const fn of next.se) fn({ ...transition });\n      return transition;\n    };\n  };\n}\n\n\nexport const statelessMachine = initializing;\n\n\n// tags: minibrary\n","tags":["minibrary","tribute"],"aftlinks":["minibrary.md"]},{"title":"steamroll.mjs","text":"export const steamroll = (code = '', refactors = []) => {\n  const refactor = { goodCode: code };\n  refactors.push(refactor);\n\n  const sandbox = document.createElement('iframe');\n\n  sandbox.addEventListener('load', () => {\n    sandbox.contentWindow.addEventListener('error', ({ lineno, error }) => {\n      const lines = code.split('\\n');\n      (refactor.badCode = refactor.goodCode), delete refactor.goodCode;\n      refactor.error = error;\n      refactor.guilty = lines.splice(lineno - 1, 1).pop();\n\n      steamroll(lines.join('\\n'), refactors);\n    });\n\n    const fingersCrossed = document.createElement('script');\n    fingersCrossed.innerHTML = code;\n    sandbox.contentDocument.body.appendChild(fingersCrossed);\n  });\n\n  document.body.appendChild(sandbox);\n\n  return refactors;\n};\n\nexport default steamroll;\n\n// tags: remix\n// inspiration: https://github.com/mattdiamond/fuckitjs\n","tags":["remix","tribute"],"aftlinks":["fake-it-till-you-make-it.mjs"]},{"title":"story-in-a-story.mjs","text":"export const runStory = async (storyTitle = '', transition = '') => {\n  if (transition) console.group(`%c${transition}`, 'font-weight: bold;');\n  try {\n    await import(storyTitle);\n  } catch (err) {\n    console.error(err);\n  }\n  if (transition) console.groupEnd();\n};\n\nexport const tellStory = (medium = console.log) =>\n  async function recount(storyTitle = '', transition = '') {\n    if (transition) console.group(`%c${transition}`, 'font-weight: bold;');\n    try {\n      await medium(await fetch(storyTitle).then((res) => res.text()));\n    } catch (err) {\n      console.error(err);\n    }\n    if (transition) console.groupEnd();\n  };\n\nexport const logStory = tellStory();\n\nexport const alertStory = tellStory(alert);\n\nexport default runStory;\n\n// tags: minibrary\n","tags":["minibrary","tribute"],"aftlinks":["all-medium.md","flag-translator.mjs","minibrary.md"]},{"title":"take-five.js","text":"// --- set the mood ---\n\nconst takeFive = new Audio('./take-five.mp3');\ntakeFive.loop = false;\ntakeFive.play();\n\n// --- take a break ---\n\nconst FIVE_MINUTES = 300000; // milliseconds\nconst CLOCK_OUT = Date.now();\n\nconst offBreak = () => Date.now() - CLOCK_OUT > FIVE_MINUTES;\n\nconst getSomeFreshAir = () =>\n  offBreak() ? clearInterval(onBreak) : alert('break time, take five!');\n\nconst onBreak = setInterval(getSomeFreshAir, 100);\n\n// tags: wellbeing\n","tags":["wellbeing","tribute"]},{"title":"testing.mjs","text":"import { describe, it, suite, test } from './describe-it.mjs';\nimport { expect } from './expect.mjs';\n\nexport { describe, expect, it, suite, test };\nexport default { describe, expect, it };\n\n// tags: testing, minibrary, useful\n","tags":["minibrary","testing","useful","tribute"],"forelinks":["describe-it.mjs","expect.mjs"],"aftlinks":["can-not-even.mjs","drabble-twabble.mjs","goalpost-sort.mjs","minibrary.md","this-is-amazing.mjs"]},{"title":"the-fun-parts.md","text":"# JavaScript: The ~~Good~~ *Fun* Parts\n\n> Most programming languages contain ~~good~~ *fun* parts and ~~bad~~ *boring* parts. I\n> discovered that I could be a better programmer by using only the ~~good~~ *fun* parts\n> and avoiding the ~~bad~~ *boring* parts. After all, how can you build something ~~good~~\n> *fun* out of ~~bad~~ *boring* parts? \\[...] But you have the power to define your own\n> subset. You can write better programs by relying exclusively on the ~~good~~ *fun*\n> parts.\n>\n> * adapted by **Dougie Crockpot** from\n>   [the original](https://www.oreilly.com/library/view/javascript-the-good/9780596517748/)\n","tags":["metappet","the fun parts"],"alt":"JavaScripting: teach me how to, Dougie.","metalinks":["cat-detector.vars.js","do-without.js","eat-sleep-rave-repeat.js","goto-ish.js","heartbreak.js","turtles-all-the-way-down.07.js","with-transparency.js"],"aftlinks":["bunny.md"]},{"title":"the-neverending-s.js","text":"while (('never-ending ' += 's')); \n\n// tags: wuzzle\n","tags":["wuzzle","tribute","1-liner"],"alt":"tory"},{"title":"the-programmers-journey.js","text":"// In the realm of code, a story unfolds\n// A tale of mystery, where secrets are told\n\n// Once upon a time, in a land of arrays\n// Lived a programmer, lost in a coding maze\n\n// With variables and functions, the story began\n// Each line of code, a step in the plan\n\nconst journey = () => {\n  // In the depths of the code, a riddle awaits\n  const riddle = \"What has keys but can't open gates?\";\n\n  // A quest for answers, the programmer embarks\n  const answer = 'A keyboard, where creativity sparks';\n\n  // But the path is not easy, challenges arise\n  const obstacles = ['Syntax errors', 'Bugs in disguise'];\n\n  // With each obstacle faced, the programmer learns\n  // Debugging skills, the fire that burns\n\n  for (let i = 0; i < obstacles.length; i++) {\n    // The programmer fights, with determination and might\n    // Seeking the truth, in the code's darkest night\n\n    console.log(`Obstacle ${i + 1}: ${obstacles[i]}`);\n    // The console reveals, the errors to see\n    // Line by line, the programmer sets free\n\n    // But the journey continues, the story unwinds\n    // Seeking perfection, in the code that binds\n    if (i === obstacles.length - 1) {\n      // Victory is near, the final test awaits\n      console.log(\"Congratulations! You've reached the gates\");\n    }\n  }\n};\n\n// The journey begins, the code comes alive\njourney();\n\n/*\n  This poem tells the story of a programmer on a quest \n    to solve a riddle hidden within the code.\n  Along the way, they encounter obstacles in the form of \n    syntax errors and bugs.\n  With determination and debugging skills, \n    they overcome these challenges and reach the final test.\n  The poem captures the essence of the coding journey, \n    where perseverance and problem-solving lead to victory.\n\n\tI hope you enjoyed this puzzling and sophisticated JavaScript poem!\n  Let me know if you have any questions \n    or if there's anything else I can assist you with.\n*/\n\n// https://www.phind.com/agent?cache=cln0bq31a0027jz08b4dc5qrh\n//  an LLM wrote this, I bring it to you unedited.  LLMs can't count lines\n\n// tags: coAIthored\n","tags":["coaithored","tribute"],"aftlinks":["coAIthored.md"]},{"title":"thing.svg","text":"<svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 441.52900941276755 196.10457597921913\" width=\"441.52900941276755\" height=\"196.10457597921913\">\n  <!-- svg-source:excalidraw -->\n  \n  <defs>\n    <style class=\"style-fonts\">\n      @font-face {\n        font-family: \"Virgil\";\n        src: url(\"https://file%2B.vscode-resource.vscode-cdn.net/Users/master/.vscode/extensions/pomdtr.excalidraw-editor-3.7.4/public//dist/excalidraw-assets/Virgil.woff2\");\n      }\n      @font-face {\n        font-family: \"Cascadia\";\n        src: url(\"https://file%2B.vscode-resource.vscode-cdn.net/Users/master/.vscode/extensions/pomdtr.excalidraw-editor-3.7.4/public//dist/excalidraw-assets/Cascadia.woff2\");\n      }\n      @font-face {\n        font-family: \"Assistant\";\n        src: url(\"https://file%2B.vscode-resource.vscode-cdn.net/Users/master/.vscode/extensions/pomdtr.excalidraw-editor-3.7.4/public//dist/excalidraw-assets/Assistant-Regular.woff2\");\n      }\n    </style>\n    \n  </defs>\n  <rect x=\"0\" y=\"0\" width=\"441.52900941276755\" height=\"196.10457597921913\" fill=\"#ffffff\"></rect><g stroke-linecap=\"round\"><g transform=\"translate(10.656546065975022 11.486217809673747) rotate(0 16.21953582763672 58.00859069824219)\"><path d=\"M0.53 0.56 C5.97 19.66, 28.38 96.27, 33.53 115.36 M-0.66 -0.2 C4.66 18.98, 27.41 97.19, 33.16 116.55\" stroke=\"#000000\" stroke-width=\"2\" fill=\"none\"></path></g></g><mask></mask><g stroke-linecap=\"round\"><g transform=\"translate(10.379202315975022 11.810436559673747) rotate(0 36.05859375 29.513671875)\"><path d=\"M1.09 -0.66 C12.87 8.94, 59.48 48.01, 71.15 58.14 M0.21 1.61 C12.3 11.29, 61.14 49.75, 73.35 59.21\" stroke=\"#000000\" stroke-width=\"2\" fill=\"none\"></path></g></g><mask></mask><g stroke-linecap=\"round\"><g transform=\"translate(81.86357731597502 72.32996780967375) rotate(0 -18.826171875 27.30078125)\"><path d=\"M-0.97 -0.89 C-7.6 8.5, -32.53 46.26, -38.68 55.68 M0.72 1.26 C-5.64 10.39, -29.93 45.36, -36.51 54.12\" stroke=\"#000000\" stroke-width=\"2\" fill=\"none\"></path></g></g><mask></mask><g stroke-linecap=\"round\"><g transform=\"translate(84.05425561848517 76.73719049825343) rotate(3.216551686154933 108.123046875 -4.18647240309005)\"><path d=\"M-1.03 1.08 C25.72 -0.63, 123.12 -11.64, 159.52 -11.15 C195.93 -10.66, 208.11 1.41, 217.41 4.01 M0.64 0.59 C27.29 -1.35, 122.37 -13.54, 158.47 -12.74 C194.58 -11.93, 207.82 2.94, 217.26 5.44\" stroke=\"#000000\" stroke-width=\"2\" fill=\"none\"></path></g></g><mask></mask><g stroke-linecap=\"round\"><g transform=\"translate(256.52055973785 64.9131569933545) rotate(0 87.60461224717005 34.98967831779041)\"><path d=\"M-0.19 1.02 C11.49 -7.64, 48.41 -64.51, 69.02 -50.92 C89.64 -37.34, 105.86 53.97, 123.51 82.53 C141.16 111.09, 166.2 113.99, 174.92 120.44 M-1.75 0.52 C9.96 -8.02, 47.41 -66.27, 68.69 -52.94 C89.96 -39.6, 108.2 51.51, 125.92 80.53 C143.64 109.56, 166.89 114.33, 175.01 121.19\" stroke=\"#000000\" stroke-width=\"2\" fill=\"none\"></path></g></g><mask></mask><g stroke-linecap=\"round\"><g transform=\"translate(117.01982731597502 72.97840530967375) rotate(0 -7.83203125 16.794921875)\"><path d=\"M1.16 0.21 C-1.57 5.75, -13.73 28.8, -16.59 34.26 M0.32 -0.73 C-2.03 4.98, -11.49 26.71, -14.36 32.48\" stroke=\"#000000\" stroke-width=\"2\" fill=\"none\"></path></g></g><mask></mask><g stroke-linecap=\"round\"><g transform=\"translate(139.58232731597502 72.57606155967375) rotate(0 -5.765625 11.68359375)\"><path d=\"M-0.42 0.3 C-2.46 4.13, -9.86 19.2, -11.67 23.06 M0.36 -0.01 C-1.8 3.87, -10.2 19.59, -12.17 23.6\" stroke=\"#000000\" stroke-width=\"2\" fill=\"none\"></path></g></g><mask></mask><g stroke-linecap=\"round\"><g transform=\"translate(170.57842106597502 69.41981155967375) rotate(0 -4.8445281982421875 8.778518676757812)\"><path d=\"M-0.13 -0.31 C-1.63 2.58, -7.79 14.57, -9.41 17.62 M0.8 0.72 C-0.71 3.68, -7.85 15.61, -9.7 18.35\" stroke=\"#000000\" stroke-width=\"2\" fill=\"none\"></path></g></g><mask></mask></svg>","tags":["tribute","variation","sketch"],"aftlinks":["variation.md"]},{"title":"thing.txt.svg","text":"<svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" \n     viewBox=\"0 0 442 196\" width=\"442\" height=\"196\">\n\n  <g transform=\"translate(11 11) rotate(0 16 58)\">\n    <path d=\"M1 1 C6 20, 28 96, 33 115\" stroke=\"#000000\"></path></g>\n\n  <g transform=\"translate(10 12) rotate(0 37 29)\">\n    <path d=\"M1 -1 C13 9, 59 48, 71 58\" stroke=\"#000000\"></path></g>\n\n  <g transform=\"translate(82 72) rotate(0 -19 27)\">\n    <path d=\"M-1 -1 C-8 9, -33 46, -39 56\" stroke=\"#000000\"></path></g>\n\n  <g transform=\"translate(84 77) rotate(4 108 -4)\">\n    <path d=\"M-1 1 C27 -1, 122 -14, 158 -13 C195 -12, 208 3, 220 10\" \n          stroke=\"#000000\" fill=\"none\"></path></g>\n\n  <g transform=\"translate(117 73) rotate(0 -8 17)\">\n    <path d=\"M1 0 C-2 6, -14 29, -17 34\" stroke=\"#000000\"></path></g>\n\n  <g transform=\"translate(140 73) rotate(0 -6 12)\">\n    <path d=\"M-1 1 C-3 4, -10 19, -12 23\" stroke=\"#000000\"></path></g>\n\n  <g transform=\"translate(171 69) rotate(0 -4 9)\">\n    <path d=\"M-0 -1 C-2 2, -7 15, -9 18\" stroke=\"#000000\"></path></g>\n\n  <g transform=\"translate(257 65) rotate(0 87 33)\">\n    <path d=\"M-2 1 C10 -8, 47 -66, 69 -53 C90 -40, 108 52, 126 81 C144 110, 167 114, 175 121\" \n          stroke=\"#000000\" fill=\"none\"></path></g>\n\n</svg>","tags":["tribute","variation"],"aftlinks":["variation.md"]},{"title":"this-is-amazing.mjs","text":"import { describe, it, expect } from './testing.mjs';\n\nconst thisIs = function amazing() { return this }.bind('amazing');\n\ndescribe(\"this: it's amazing\", () => {\n  it('is \"amazing\"', () => expect(thisIs()).toEqual('amazing'));\n});\n","tags":["tribute"],"forelinks":["testing.mjs"]},{"title":"time-capsule.js","text":"(function timeCapsule(wisdom = prompt('Share some wisdom with the future:')) {\n  if (wisdom) setTimeout(alert, 2147483647, wisdom);\n  else timeCapsule();\n})();\n","tags":["tribute"]},{"title":"tintin.0.js","text":"const tin = () => 'tin';\n\nconsole.log(tin.name);\nconsole.log(tin());\n\n// tags: puzzle\n","tags":["puzzle","tribute","variation"],"aftlinks":["variation.md"]},{"title":"tintin.0.mjs","text":"import { chronicle } from './chronicle.mjs';\n\nconst tin = chronicle(() => 'tin');\n\ntin();\nconsole.log(tin._chronicle);\n\n// tags: puzzle\n","tags":["puzzle","tribute","variation"],"forelinks":["chronicle.mjs"],"aftlinks":["variation.md"]},{"title":"tintin.1.js","text":"const tin = () => tin;\n\nconsole.log(tin().name);\nconsole.log(tin()()()()());\n\n// tags: puzzle\n","tags":["puzzle","tribute","variation"],"aftlinks":["variation.md"]},{"title":"tintin.1.mjs","text":"import { chronicle } from './chronicle.mjs';\n\nconst tin = chronicle(() => tin);\n\ntin()()()()();\nconsole.log(tin._chronicle);\n\n// tags: puzzle\n","tags":["puzzle","tribute","variation"],"forelinks":["chronicle.mjs"],"aftlinks":["variation.md"]},{"title":"tintin.2.js","text":"const tin = () => ({ tin });\n\nconsole.log(tin().tin.name);\nconsole.log(tin().tin().tin().tin);\n\n// tags: puzzle\n","tags":["puzzle","tribute","variation"],"aftlinks":["variation.md"]},{"title":"tintin.2.mjs","text":"import { chronicle } from './chronicle.mjs';\n\nconst tin = chronicle(() => ({ tin }));\n\ntin().tin;\nconsole.log(tin._chronicle);\n\ntin._forget;\n\ntin().tin().tin().tin;\nconsole.log(tin._chronicle);\n\n// tags: puzzle\n","tags":["puzzle","tribute","variation"],"forelinks":["chronicle.mjs"],"aftlinks":["variation.md"]},{"title":"tintin.3.js","text":"const tin = () => tin;\ntin.tin = tin;\n\nconsole.log(tin[tin().name]()[tin.name].name);\nconsole.log(tin.tin()().tin().tin.tin()()().tin().tin.tin());\n\n// tags: puzzle\n","tags":["puzzle","tribute","variation"],"aftlinks":["variation.md"]},{"title":"tintin.3.mjs","text":"import { chronicle } from './chronicle.mjs';\n\nconst tin = chronicle(() => tin);\ntin.tin = tin;\n\ntin.tin()['tin'];\nconsole.log(tin._chronicle);\n\ntin._forget;\n\ntin.tin()().tin().tin.tin()()().tin().tin.tin();\nconsole.log(tin._chronicle);\n\n// tags: puzzle\n","tags":["puzzle","tribute","variation"],"forelinks":["chronicle.mjs"],"aftlinks":["variation.md"]},{"title":"tintin.4.js","text":"const tin = () => ({ tin });\ntin.tin = tin;\n\nconsole.log(tin[tin.name]().tin.tin.tin()['tin'].name);\nconsole.log(tin.tin()['tin']().tin().tin);\n\n// tags: puzzle\n","tags":["puzzle","tribute","variation"],"aftlinks":["variation.md"]},{"title":"tintin.4.mjs","text":"import { chronicle } from './chronicle.mjs';\n\nconst tin = chronicle(() => ({ tin }));\ntin.tin = tin;\n\ntin['tin']().tin.tin.tin().tin;\nconsole.log(tin._chronicle);\n\ntin._forget;\n\ntin.tin()['tin']().tin().tin;\nconsole.log(tin._chronicle);\n\n// tags: puzzle\n","tags":["puzzle","tribute","variation"],"forelinks":["chronicle.mjs"],"aftlinks":["variation.md"]},{"title":"togglog.mjs","text":"export const togglog = ({ write = true, out = console.log, label = null } = {}) => {\n  const log = (...things) => {\n    if (label !== null) things.unshift(label);\n    if (write) out(...things);\n    return things.at(-1);\n  };\n\n  Object.defineProperties(log, {\n    log: { get: () => log },\n\n    on: { get: () => ((write = true), log) },\n    off: { get: () => ((write = false), log) },\n    toggle: { get: () => ((write = !write), log) },\n\n    is: { get: () => (write ? 'on' : 'off') },\n\n    out: { set: (newOut) => (out = newOut) },\n    label: { set: (newLabel) => (label = newLabel) },\n  });\n\n  return log;\n};\n\nexport default togglog;\n\n// tags: minibrary\n\n\n","tags":["minibrary","tribute","variation"],"aftlinks":["minibrary.md","variation.md"]},{"title":"togglog.py","text":"import traceback\n\n\nclass Togglog:\n    def __init__(self, out=print, write=True, label=None, line=False):\n        self.out = out\n        self.write = write\n        self.label = label\n        self.line = line\n\n    def __getattr__(self, key):\n        if key == \"on\":\n            self.write = True\n        elif key == \"off\":\n            self.write = False\n        elif key == \"toggle\":\n            self.write = not self.write\n        return self\n\n    def log(self, *rest):\n        if self.write:\n            logs = [*rest]\n            if self.label != None:\n                logs.insert(0, self.label)\n            if self.line != False:\n                logs.insert(0, f\"ln {str(list(traceback.walk_stack(None))[0][1])}:\")\n            self.out(*logs)\n        return rest[-1]\n\n\n# tags: minibrary\n","tags":["minibrary","tribute","variation"],"aftlinks":["minibrary.md","variation.md"]},{"title":"training-wheels.mjs","text":"import { demethod } from './demethod.mjs';\n\n// --- setup, could happen in a different file ---\n\ndemethod(String, { target: globalThis, prefix: '$str' });\ndemethod(Array, { target: globalThis, prefix: '$arr' });\ndemethod(console, { target: globalThis, statics: true });\n\n// --- use the functioned methods ---\n\nconst things = [];\nwhile (true) {\n  const thing = prompt('enter things, cancel to finish');\n  log(thing);\n  if (thing === null) break;\n  $arrPush(things, thing);\n}\nlog(things);\n\nconst smallThings = $arrMap(things, $strToLowerCase);\nconst renderedThings = $arrJoin(smallThings, '\\n- ');\nconst packagedThings = `here are your smaller things:\\n- ${renderedThings}`;\n\nalert(packagedThings);\n","tags":["tribute"],"forelinks":["demethod.mjs"]},{"title":"turtles-all-the-way-down.00.js","text":"(function turtle() { turtle() })();\n\n// tags: wuzzle\n","tags":["wuzzle","tribute","variation","1-liner","🐢"],"aftlinks":["variation.md"]},{"title":"turtles-all-the-way-down.01.js","text":"(turtle = () => turtle())();\n\n// tags: wuzzle\n","tags":["wuzzle","tribute","variation","1-liner","🐢"],"aftlinks":["variation.md"]},{"title":"turtles-all-the-way-down.02.js","text":"(turtle => turtle(turtle))(turtle => turtle(turtle))\n\n// tags: wuzzle\n","tags":["wuzzle","tribute","variation","1-liner","🐢"],"aftlinks":["variation.md"]},{"title":"turtles-all-the-way-down.03.js","text":"({ ['🐢']: function () { this['🐢']() } })['🐢']();\n\n// tags: wuzzle\n","tags":["wuzzle","tribute","variation","1-liner","🐢"],"aftlinks":["variation.md"]},{"title":"turtles-all-the-way-down.04.js","text":"(turtle = turtle => { try { turtle(turtle) } catch(eltrut) { turtle(turtle) } })(turtle);\n\n// tags: wuzzle","tags":["wuzzle","tribute","variation","1-liner","🐢"],"aftlinks":["variation.md"]},{"title":"turtles-all-the-way-down.05.js","text":"alert(function tur(tle = '🐢') { try { return tur(tle) } catch (turtle) { return tur,tle } }());\n\n// tags: wuzzle","tags":["wuzzle","tribute","variation","1-liner","🐢"],"aftlinks":["variation.md"]},{"title":"turtles-all-the-way-down.06.js","text":"turtle = eval, tur = { tle: 'turtle(tur.tle)'}, turtle(tur.tle);\n\n// tags: recurseval, wuzzle","tags":["recurseval","wuzzle","tribute","variation","1-liner","🐢"],"aftlinks":["variation.md"]},{"title":"turtles-all-the-way-down.07.js","text":"with (console) with ({ turtles: '🐢🐢' }) while (turtles) log (turtles);\n\n// tags: the fun parts, wuzzle\n","tags":["the fun parts","wuzzle","tribute","variation","1-liner","🐢"],"aftlinks":["the-fun-parts.md","variation.md"]},{"title":"turtles-all-the-way-down.08.mjs","text":"import { chronicle } from './chronicle.mjs';\n\nconst turtle = chronicle(function t(s) { turtle(s) });\n\ntry { turtle('🐢') } catch (turtles) { console.log(turtle._chronicle) }\n\n// tags: wuzzle","tags":["wuzzle","tribute","variation","🐢"],"forelinks":["chronicle.mjs"],"aftlinks":["variation.md"]},{"title":"turtles-all-the-way-down.09.mjs","text":"import { describe } from './describe-it.mjs';\n\n(function turtles() { describe('🐢', turtles) })();\n\n// tags: wuzzle","tags":["wuzzle","tribute","variation","🐢"],"forelinks":["describe-it.mjs"],"aftlinks":["variation.md"]},{"title":"turtles-all-the-way-down.10.js","text":"setInterval(() => console.log('🐢'));\n\n// tags: wuzzle","tags":["wuzzle","tribute","variation","1-liner","🐢"],"aftlinks":["variation.md"]},{"title":"turtles-all-the-way-down.11.js","text":"while (true) console.log('🐢');\n","tags":["tribute","variation","1-liner","🐢"],"aftlinks":["variation.md"]},{"title":"turtles-all-the-way-down.12.mjs","text":"import projector from './projector.mjs';\n\nconst AETHER = 'color: yellow; background-color: black;';\nconst HORIZON = 13;\n\nconst body = (sparsity = 1) => (Math.random() < sparsity ? '*' : ' ');\nconst bodies = (sparsity = 1) =>\n  Array(HORIZON).fill().map(() => body(sparsity)).join(' ');\n\nconst down = (frame = 0, turtle = ' 🐢 ') =>\n  bodies(20 / frame) + turtle + bodies(20 / frame);\n\nfunction* descending(config = {}) {\n  const deeper = Array(42).fill(down(-1, '    '));\n  deeper.push(down(-1, ' 🗺️ '), down(-1, ' 🐘 '), down(-1));\n\n  while (descending) {\n    deeper.shift(), deeper.push(down(config.frame));\n    yield [`%c${deeper.join('\\n')}`, AETHER];\n  }\n}\n\nprojector(descending, { frameRate: 7 });\n\n// tags: reel","tags":["reel","tribute","variation","🐢"],"forelinks":["projector.mjs"],"aftlinks":["variation.md"]},{"title":"turtles-all-the-way-down.13.js","text":"turtles = {}, turtles['🐢🐢'] = turtles;\n","tags":["tribute","variation","1-liner","🐢"],"aftlinks":["turtles-all-the-way-down.14.mjs","variation.md"]},{"title":"turtles-all-the-way-down.14.mjs","text":"await fetch('./turtles-all-the-way-down.13.js')\n  .then((res) => res.text())\n  .then((turts) => eval('globalThis.' + turts))\n  .catch(console.error);\n\nwhile ('🐢🐢' in turtles) turtles = turtles['🐢🐢'];\n","tags":["tribute","variation","🐢"],"forelinks":["turtles-all-the-way-down.13.js"],"aftlinks":["variation.md"]},{"title":"turtles-all-the-way-down.html","text":"<title>turtles all the way down</title>\n\n<pre>\n  _____     ____\n /      \\  |  o |\n|        |/ ___\\|\n|_________/\n|_|_| |_|_|\n</pre>\n\n<script id=\"down\">\n  const turtle = document.getElementsByTagName('pre')[0];\n  setInterval(() => down.before(turtle.cloneNode(true)));\n</script>\n\n<!-- turtle: https://www.asciiart.eu/animals/reptiles/turtles -->\n<!-- tags: wuzzle -->\n","tags":["wuzzle","tribute","variation","🐢"],"aftlinks":["variation.md"]},{"title":"turtles_all_the_way_down.0.py","text":"def turtle():\n  turtle()\nturtle()\n\n# tags: wuzzle","tags":["wuzzle","tribute","variation","🐢"],"aftlinks":["variation.md"]},{"title":"turtles_all_the_way_down.1.py","text":"turtle = lambda: turtle(); turtle()\n\n# tags: wuzzle","tags":["wuzzle","tribute","variation","1-liner","🐢"],"aftlinks":["variation.md"]},{"title":"turtles_all_the_way_down.2.py","text":"(lambda turtle: turtle(turtle))(lambda turtle: turtle(turtle))\n\n# tags: wuzzle","tags":["wuzzle","tribute","variation","1-liner","🐢"],"aftlinks":["variation.md"]},{"title":"turtlje.mjs","text":"export const turtlje = (c = document.createElement('canvas')) => {\n  c = typeof c === 'string' ? document.getElementById(c) : c;\n  const pad = c.getContext('2d');\n  const state = { col: 'black', width: 1, deg: 0, x: c.width / 2, y: c.height / 2 };\n  const turtle = {\n    backward: (pixels) => forward(-pixels),\n    color: (col) => ((state.col = col), turtle),\n    dot: (diameter) => {\n      pad.beginPath();\n      pad.arc(state.x, state.y, diameter / 2, 0, 2 * Math.PI);\n      pad.fillStyle = state.col;\n      pad.lineWidth = state.width;\n      pad.fill();\n      return turtle; },\n    forward: (pixels) => {\n      pad.beginPath();\n      pad.moveTo(state.x, state.y);\n      state.x += -Math.cos((state.deg / 180) * Math.PI) * pixels;\n      state.y += -Math.sin((state.deg / 180) * Math.PI) * pixels;\n      pad.lineTo(state.x, state.y);\n      pad.strokeStyle = state.col;\n      pad.lineWidth = state.width;\n      pad.stroke();\n      return turtle; },\n    goto: (x, y) => {\n      state.x = x + c.width / 2;\n      state.y = y + c.height / 2;\n      return turtle; },\n    left: (deg) => turtle.right(-deg),\n    right: (deg) => {\n      state.deg = (deg + state.deg) % 360;\n      return turtle; },\n    width: (pixels) => {\n      state.width = pixels;\n      return turtle; },\n  };\n  return { _pad: pad, _state: state, ...turtle };\n};\n\nexport default turtlje;\n\n// tags: minibrary\n","tags":["minibrary","tribute"],"aftlinks":["minibrary.md","sierpinski.html"]},{"title":"useless-machine.1.html","text":"<input type=\"checkbox\" onclick=\"setTimeout(() => this.checked = false, 500)\" />\n","tags":["tribute","variation","1-liner"],"aftlinks":["variation.md"]},{"title":"useless-machine.1.js","text":"open('', '_blank').document.body.innerHTML = '<input type=\"checkbox\" onclick=\"setTimeout(() => this.checked = false, 500)\" />';","tags":["tribute","variation","1-liner"],"aftlinks":["variation.md"]},{"title":"useless-machine.2.html","text":"<script>\n  class UselessMachine extends HTMLInputElement {\n    constructor() {\n      super();\n      this.type = 'checkbox';\n      this.addEventListener('click', () => {\n        setTimeout(() => (this.checked = false), 500);\n      });\n    }\n  }\n\n  customElements.define('useless-machine', UselessMachine, { extends: 'input' });\n</script>\n\n<input is=\"useless-machine\" />\n\n<!-- https://www.phind.com/agent?cache=cln08l98h000al508gc60msg4 -->\n\n<!-- tags: coAIthored, frivolous -->\n","tags":["coaithored","frivolous","tribute","variation"],"aftlinks":["coAIthored.md","variation.md"]},{"title":"var-let-const.js","text":"// 'use strict';\n\nconsole.assert(__ === let);\n\n{\n  var let = 'const';\n}\n\nconsole.assert(__ === let);\n\n// tags: puzzle\n","tags":["puzzle","tribute"]},{"title":"variation.md","text":"# Theme and Variation\n","tags":["metappet","1-liner","variation"],"alt":"It's expression, not obsession. I promise.","metalinks":["10-print.1.js","10-print.2.js","10-print.3.js","10-print.4.js","10-print.6.mjs","be.canvas.html","be.coem","be.css","be.css.html","be.de.txt","be.en.txt","be.flip.js","be.fr.txt","be.html","be.js","be.json","be.md","be.nl.txt","be.py","be.txt","be.txt.svg","be.yaml","breathless.html","breathless.js","cat-detector.ascii.html","cat-detector.ascii.txt","cat-detector.be.coem","cat-detector.be.js","cat-detector.cat.js","cat-detector.eval.js","cat-detector.evbl.js","cat-detector.golf.js","cat-detector.js.md","cat-detector.js.md.st.js","cat-detector.polyfill.mjs","cat-detector.psu","cat-detector.scm.js","cat-detector.scm.json","cat-detector.spoken.mjs","cat-detector.svg","cat-detector.vars.js","cat-detector.wc.html","cat-i-farted.js","cat-i-farted.mjs","cat_detector.1.py","cat_detector.1.py.js","cat_detector.2.py","cat_detector.2.py.js","empty.json","empty.yaml","halloween.js","halloween.py","hello-world.js","hello_world.py","je-l-ignore.js","je-l-ignore.mjs","love-adventure-success.1.js","love-adventure-success.2.js","mu.js","mu.mjs","n-e-d.08-24.js","n-e-d.coem","no-comment.js","no-comment.mjs","optimism.coem","optimism.js","recurseval.1.js","recurseval.2.js","recurseval.3.js","reflection.css","reflection.js","reverse-input.js.txt","reverse-input.txt.js","reverse-input.txt.js.st.txt","snail-train.coem","snail-train.html","snail-train.js","snail-train.mjs","snail-train.realtime.coem","snail-train.txt","snail_train.py","thing.svg","thing.txt.svg","tintin.0.js","tintin.0.mjs","tintin.1.js","tintin.1.mjs","tintin.2.js","tintin.2.mjs","tintin.3.js","tintin.3.mjs","tintin.4.js","tintin.4.mjs","togglog.mjs","togglog.py","turtles-all-the-way-down.00.js","turtles-all-the-way-down.01.js","turtles-all-the-way-down.02.js","turtles-all-the-way-down.03.js","turtles-all-the-way-down.04.js","turtles-all-the-way-down.05.js","turtles-all-the-way-down.06.js","turtles-all-the-way-down.07.js","turtles-all-the-way-down.08.mjs","turtles-all-the-way-down.09.mjs","turtles-all-the-way-down.10.js","turtles-all-the-way-down.11.js","turtles-all-the-way-down.12.mjs","turtles-all-the-way-down.13.js","turtles-all-the-way-down.14.mjs","turtles-all-the-way-down.html","turtles_all_the_way_down.0.py","turtles_all_the_way_down.1.py","turtles_all_the_way_down.2.py","useless-machine.1.html","useless-machine.1.js","useless-machine.2.html","ykb.cmyk.txt","ykb.css.txt","ykb.hsv.txt","ykb.rgb.txt","ykb.yaml","yolo.js","yolo.py","yolo.recurseval.js","yolo.recurseval.py","yoloer.js","yoloer.py","yoloest.js","yoloest.py"]},{"title":"wait-for-it.js","text":"(function waitForIt(wait = 0) {\n  console.log('wait for it ...');\n  wait = setTimeout(() => waitForIt(wait), wait);\n})();\n","tags":["tribute"]},{"title":"wat.html","text":"<!-- Wat?!\n\nwindow.open('wat.html', '_blank');\n\n/*\n-->\n\n<h1>Wat?!</h1>\n\n<script src=\"./wat.html\"></script>\n\n<!--\n*/\n\nalert('Wat?!');\n\n-->\n","tags":["tribute"],"forelinks":["wat.html"],"aftlinks":["wat.html"]},{"title":"what-does-the-fox-say.mjs","text":"// This looks like a fox, right?\n// Taken from here - https://ascii.co.uk/art/fox\nconst fox = [\n  '%c',\n  '%c    _,-=._              /|_/|',\n  '%c`-.}       `=._,.-=-._.,  @ @._,',\n  \"%c   `._ _,-.   )      _,.-'\",\n  '%c           G.m-\"^m`m\\'',\n  '%c',\n];\n\nexport const theFoxSays = (...args) => {\n  // Gets args as a string\n  const joinedArgs = args.join(' ');\n\n  // Add the bubble if there is something to log!\n  if (joinedArgs.length > 0) {\n    fox[1] += `        ---${'-'.repeat(joinedArgs.length)}-`;\n    fox[2] += `  -(   ${joinedArgs}   )`;\n    fox[3] += `           ---${'-'.repeat(joinedArgs.length)}-`;\n  }\n\n  // Log the fox!\n  for (const line of fox) {\n    console.log(line, 'color: firebrick');\n  }\n};\n\nexport default theFoxSays;\n\n// tags: sketch, remix\n// inspiration: https://tholman.com/console-dot-frog/\n","tags":["remix","sketch","tribute"],"aftlinks":["funsole.mjs"]},{"title":"with-transparency.js","text":"const transparency = {\n  remember_that: 'let',\n  stores: '=',\n  as_long_as: 'while',\n  is_less_than: '<',\n  add_one_to: '++',\n  show_me: 'alert',\n};\n\nwith (transparency) {\n  eval(`\n\n${remember_that} i ${stores} 0;\n\n${as_long_as}( i ${is_less_than} 5 )${add_one_to} i;\n\n${show_me}( i );\n\n`);\n}\n\n\n// tags: the fun parts\n","tags":["the fun parts","tribute"],"aftlinks":["the-fun-parts.md"]},{"title":"ykb.cmyk.txt","text":"#002EA6","tags":["tribute","variation","1-liner"],"aftlinks":["variation.md"]},{"title":"ykb.css.txt","text":"rgb(0,47,167)","tags":["tribute","variation","1-liner"],"aftlinks":["variation.md"]},{"title":"ykb.hsv.txt","text":"#002FA6","tags":["tribute","variation","1-liner"],"aftlinks":["variation.md"]},{"title":"ykb.rgb.txt","text":"#002FA7","tags":["tribute","variation","1-liner"],"aftlinks":["variation.md"]},{"title":"ykb.yaml","text":"cmyk: '#002EA6'\ncss: rgb(0,47,167)\nhsv: '#002FA6'\nrgb: '#002FA7'","tags":["tribute","variation"],"aftlinks":["variation.md"]},{"title":"yolo.js","text":"const shipit = (motto = '') => {\n  try {\n    alert(eval(prompt(`${motto}!`)));\n  } catch (err) {\n    alert(`${err.name}: ${err.message}\\n\\n${motto}!`);\n    shipit(motto);\n  }\n};\n\nshipit('YOLO');\n\n// tags: yolo\n","tags":["yolo","tribute","variation"],"aftlinks":["variation.md"]},{"title":"yolo.py","text":"def shipit(motto=\"\"):\n    try:\n        print(eval(input(f\"\\n{motto}: \")))\n    except Exception as ex:\n        print(type(ex).__name__ + \":\", ex)\n        shipit(motto)\n\n\nshipit(\"YOLO\")\n\n# tags: yolo\n","tags":["yolo","tribute","variation"],"aftlinks":["variation.md"]},{"title":"yolo.recurseval.js","text":"alert(eval(eval((yolo = 'eval(prompt(\"yolo\", yolo) || yolo)'))));\n\n// see: yoloest.js, recurseval.1.js\n// tags: yolo, remix\n","tags":["remix","yolo","tribute","variation","recurseval"],"forelinks":["recurseval.1.js","yoloest.js"],"aftlinks":["variation.md"]},{"title":"yolo.recurseval.py","text":"yolo = 'eval(input(\"yolo\") or yolo)'\nprint(eval(yolo))\n\n# tags: yolo","tags":["yolo","tribute","variation","recurseval"],"aftlinks":["variation.md"]},{"title":"yoloer.js","text":"while (true) {\n  try {\n    alert(eval(prompt(`YOLO!`)));\n    break;\n  } catch (err) {\n    alert(`${err.name}: ${err.message}`);\n  }\n}\n\n// tags: yolo\n","tags":["yolo","tribute","variation"],"aftlinks":["variation.md"]},{"title":"yoloer.py","text":"while True:\n    try:\n        print(eval(input(f\"\\nYOLO: \")))\n        break\n    except Exception as ex:\n        print(type(ex).__name__ + \":\", ex)\n\n# tags: yolo\n","tags":["yolo","tribute","variation"],"aftlinks":["variation.md"]},{"title":"yoloest.js","text":"alert(eval(prompt('YOLO')));\n\n// tags: yolo\n","tags":["yolo","tribute","variation","1-liner"],"aftlinks":["variation.md","yolo.recurseval.js"]},{"title":"yoloest.py","text":"print(eval(input('YOLO')))\n\n# tags: yolo","tags":["yolo","tribute","variation","1-liner"],"aftlinks":["variation.md"]},{"title":"yoloish.js","text":"/*\n  // 'use strict';\n*/\n\nconst YOLO = 'YOLO';\n\nconst walkTheTalk = (motto = YOLO) =>\n  prompt(`${motto}!`) || (alert(`${motto} harder!`), walkTheTalk(motto));\n\nconst shipit = (code = `\"${YOLO}!`) => {\n  try {\n    alert(eval(code));\n  } catch (err) {\n    alert(`${err.name}: ${err.message}\\n\\n${YOLO}!`);\n  } finally {\n    shipit(walkTheTalk(YOLO));\n  }\n};\n\nshipit(walkTheTalk(YOLO));\n\n// tags: yolo\n","tags":["yolo","tribute"]},{"title":".js","text":"","figment":true,"tags":["tribute"]},{"title":".mjs","text":"","figment":true,"tags":["tribute"]},{"title":".md","text":"","figment":true},{"title":".html","text":"","figment":true,"tags":["tribute"]},{"title":".coem","text":"","figment":true,"tags":["tribute"]},{"title":".css","text":"","figment":true},{"title":".txt","text":"","figment":true,"tags":["tribute"]},{"title":".json","text":"","figment":true,"tags":["tribute"]},{"title":".py","text":"","figment":true,"tags":["tribute"]},{"title":".svg","text":"","figment":true,"tags":["tribute","sketch"]},{"title":".yaml","text":"","figment":true,"tags":["tribute"]},{"title":".psu","text":"","figment":true,"tags":["tribute"]},{"title":"cat-detector.js.md.st.js","text":"let input = prompt('cat, please');\n\nconst isCat = input === 'cat';\n\nif (isCat) alert('thank you for the cat');\n\nelse {\n\twhile (input !== 'cat') input = prompt('still not a cat. \\n\\ncat, please');\n\n\talert('finally, a cat.');\n}\n","tags":["tribute","variation","subtext"],"figment":"cat-detector.js.md","aftlinks":["cat-detector.js.md","variation.md"]},{"title":"reverse-input.txt.js.st.txt","text":"\n  Get some text from the user.\n\n  Then create a new empty text.\n\n  Now start at the beginning of the user input,\n     One by one, copy each character to the beginning of the new text.\n\n  Finally, show the new text to the user.","figment":"reverse-input.txt.js","aftlinks":["reverse-input.txt.js","variation.md"],"tags":["variation","subtext"]}]